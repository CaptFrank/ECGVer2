/*
 * ECGJAVa2View.java
 */

package ecgjava2;


import LogFiles.WriteLogFilesOthers;
import gnu.io.NoSuchPortException;
import gnu.io.PortInUseException;
import gnu.io.UnsupportedCommOperationException;
import java.io.IOException;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import org.jdesktop.application.Action;
import org.jdesktop.application.ResourceMap;
import org.jdesktop.application.SingleFrameApplication;
import org.jdesktop.application.FrameView;
import org.jdesktop.application.TaskMonitor;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import javax.swing.Timer;
import javax.swing.Icon;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JOptionPane;


/**
 * The application's main frame.
 */
public class ECGJAVa2View extends FrameView {
    //define stuff
    protected static boolean SignalAnalysisGuard = false;
    protected static long InitialTime;
    protected static boolean SPO2guard = false;
    private final Timer messageTimer;
    private final Timer busyIconTimer;
    private final Icon idleIcon;
    private final Icon[] busyIcons = new Icon[15];
    private int busyIconIndex = 0;
    protected JFrame Dialog, GPSDialog;
    protected static int selection;
    private JDialog aboutBox;
    protected static boolean socketConnected = false;
    private boolean DialogGPSconnected = false;

    public ECGJAVa2View(SingleFrameApplication app) {
        super(app);

        // making the gui
        initComponents();

            ECGJAVa2View.label40.setVisible(false);
            ECGJAVa2View.label30.setVisible(false);
            ECGJAVa2View.label20.setVisible(false);
            ECGJAVa2View.label10.setVisible(false);

        Main.addWindowListener(new WindowAdapter(){
            public void windowClosing(WindowEvent we){
                    if (CommPortOpen.getConnectGuard() == true) {
                        CommPortOpen.setConnectGuard(false);
                    }
                    System.exit(0);
            }
        });


        // status bar initialization - message timeout, idle icon and busy animation, etc
        ResourceMap resourceMap = getResourceMap();
        int messageTimeout = resourceMap.getInteger("StatusBar.messageTimeout");
        messageTimer = new Timer(messageTimeout, new ActionListener() {
            public void actionPerformed(ActionEvent e) {
            }
        });
        messageTimer.setRepeats(false);
        int busyAnimationRate = resourceMap.getInteger("StatusBar.busyAnimationRate");
        for (int i = 0; i < busyIcons.length; i++) {
            busyIcons[i] = resourceMap.getIcon("StatusBar.busyIcons[" + i + "]");
        }
        busyIconTimer = new Timer(busyAnimationRate, new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                busyIconIndex = (busyIconIndex + 1) % busyIcons.length;
            }
        });
        idleIcon = resourceMap.getIcon("StatusBar.idleIcon");
        // connecting action tasks to status bar via TaskMonitor
        TaskMonitor taskMonitor = new TaskMonitor(getApplication().getContext());
        taskMonitor.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                String propertyName = evt.getPropertyName();
            }
        });
    }

    //invoke on action
    @Action
    public void showAboutBox() {
        if (aboutBox == null) {
            JFrame mainFrame = ECGJAVa2App.getApplication().getMainFrame();
            aboutBox = new ECGJAVa2AboutBox(mainFrame);
            aboutBox.setLocationRelativeTo(mainFrame);
        }
        ECGJAVa2App.getApplication().show(aboutBox);
    }
    
    
    static boolean DBconnected = false;
    public static boolean Dialogconnected = false;
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        mainPanel = new javax.swing.JPanel();
        mainPanel2 = new javax.swing.JDesktopPane();
        Connected = new javax.swing.JInternalFrame();
        Record = new javax.swing.JCheckBox();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 32767));
        jPanel3 = new javax.swing.JPanel();
        Serial = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        TEXT = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jLabel34 = new javax.swing.JLabel();
        TEXT1 = new javax.swing.JLabel();
        ConectBreathSerial = new javax.swing.JLabel();
        SignalAnalysis = new javax.swing.JInternalFrame();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel14 = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        XbeePackets = new javax.swing.JLabel();
        XbeeTotal = new javax.swing.JLabel();
        GoodPackets = new javax.swing.JLabel();
        Xbeegood = new javax.swing.JLabel();
        jPanel15 = new javax.swing.JPanel();
        jLabel21 = new javax.swing.JLabel();
        BreathPacket = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        BreathTotal = new javax.swing.JLabel();
        SignalStrength = new javax.swing.JPanel();
        jLabel19 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        label10 = new javax.swing.JLabel();
        label20 = new javax.swing.JLabel();
        label30 = new javax.swing.JLabel();
        label40 = new javax.swing.JLabel();
        jPanel16 = new javax.swing.JPanel();
        jLabel22 = new javax.swing.JLabel();
        Batt = new javax.swing.JLabel();
        ECGContainer = new javax.swing.JInternalFrame();
        jLabel16 = new javax.swing.JLabel();
        jMenuBar4 = new javax.swing.JMenuBar();
        jMenu4 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        RealTimeData = new javax.swing.JInternalFrame();
        jPanel8 = new javax.swing.JPanel();
        BaseLabel = new javax.swing.JLabel();
        BaseTempValue = new javax.swing.JLabel();
        TympTempValue = new javax.swing.JLabel();
        Tymplabel = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        DiffTempValue = new javax.swing.JLabel();
        jPanel18 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        BreathVal = new javax.swing.JLabel();
        BreathPer = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jPanel19 = new javax.swing.JPanel();
        LightSensorLabel = new javax.swing.JLabel();
        ECGLabel = new javax.swing.JLabel();
        RESPLabel = new javax.swing.JLabel();
        SPO2Label = new javax.swing.JLabel();
        PulseLabel = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        LightValue = new javax.swing.JLabel();
        ECGValue = new javax.swing.JLabel();
        RESPValue = new javax.swing.JLabel();
        SPO2Value = new javax.swing.JLabel();
        PulseValue = new javax.swing.JLabel();
        REDLED = new javax.swing.JLabel();
        IRLED = new javax.swing.JLabel();
        RESP = new javax.swing.JLabel();
        RealTime = new javax.swing.JInternalFrame();
        jPanel2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        BreathSerialChart1 = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        TempSerialChart = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        LightSerialChart2 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel31 = new javax.swing.JLabel();
        RESPSerial = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        ECGSerialChart = new javax.swing.JButton();
        jPanel10 = new javax.swing.JPanel();
        jLabel27 = new javax.swing.JLabel();
        IRSerialChart = new javax.swing.JButton();
        StartSPO2 = new javax.swing.JButton();
        StopSPO2 = new javax.swing.JButton();
        ResetSPO2 = new javax.swing.JButton();
        jPanel11 = new javax.swing.JPanel();
        OXISerialChart1 = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        StartPulse = new javax.swing.JButton();
        StopPulse = new javax.swing.JButton();
        ResetPulse = new javax.swing.JButton();
        GPSPanel = new javax.swing.JInternalFrame();
        CPSFrame = new javax.swing.JPanel();
        jLabel35 = new javax.swing.JLabel();
        DistanceGPS = new javax.swing.JLabel();
        GPS = new javax.swing.JButton();
        menuBar = new javax.swing.JMenuBar();
        javax.swing.JMenu fileMenu = new javax.swing.JMenu();
        ConnectBreath = new javax.swing.JMenu();
        ConnectBoard = new javax.swing.JMenuItem();
        Connect = new javax.swing.JMenuItem();
        Disconnect = new javax.swing.JMenuItem();
        Net_Chat = new javax.swing.JMenuItem();
        javax.swing.JMenuItem exitMenuItem = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem4 = new javax.swing.JMenuItem();
        Dialog_box = new javax.swing.JMenuItem();
        jMenu9 = new javax.swing.JMenu();
        ShowConnected = new javax.swing.JMenuItem();
        ShowTemp = new javax.swing.JMenuItem();
        ShowInbound = new javax.swing.JMenuItem();
        ShowRTD = new javax.swing.JMenuItem();
        ShowECG = new javax.swing.JMenuItem();
        ShowSignal = new javax.swing.JMenuItem();
        ShowALL = new javax.swing.JMenuItem();
        jMenu6 = new javax.swing.JMenu();
        jMenuItem10 = new javax.swing.JMenuItem();
        javax.swing.JMenu helpMenu = new javax.swing.JMenu();
        javax.swing.JMenuItem aboutMenuItem = new javax.swing.JMenuItem();
        Main = new javax.swing.JFrame();
        jLabel20 = new javax.swing.JLabel();
        jCheckBox1 = new javax.swing.JCheckBox();

        mainPanel.setName("mainPanel"); // NOI18N
        mainPanel.setLayout(null);

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(ecgjava2.ECGJAVa2App.class).getContext().getResourceMap(ECGJAVa2View.class);
        mainPanel2.setBackground(resourceMap.getColor("mainPanel2.background")); // NOI18N
        mainPanel2.setName("mainPanel2"); // NOI18N
        mainPanel2.setPreferredSize(new java.awt.Dimension(500, 500));

        Connected.setClosable(true);
        Connected.setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        Connected.setIconifiable(true);
        Connected.setResizable(true);
        Connected.setTitle(resourceMap.getString("Connected.title")); // NOI18N
        Connected.setName("Connected"); // NOI18N
        Connected.setVisible(true);
        Connected.getContentPane().setLayout(new java.awt.GridBagLayout());

        Record.setText(resourceMap.getString("Record.text")); // NOI18N
        Record.setName("Record"); // NOI18N
        Record.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RecordActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 7, 0);
        Connected.getContentPane().add(Record, gridBagConstraints);

        filler1.setName("filler1"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        Connected.getContentPane().add(filler1, gridBagConstraints);

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(resourceMap.getString("jPanel3.border.title"))); // NOI18N
        jPanel3.setName("jPanel3"); // NOI18N

        Serial.setText(resourceMap.getString("Serial.text")); // NOI18N
        Serial.setName("Serial"); // NOI18N

        jLabel33.setText(resourceMap.getString("jLabel33.text")); // NOI18N
        jLabel33.setName("jLabel33"); // NOI18N

        TEXT.setText(resourceMap.getString("TEXT.text")); // NOI18N
        TEXT.setName("TEXT"); // NOI18N

        org.jdesktop.layout.GroupLayout jPanel3Layout = new org.jdesktop.layout.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel3Layout.createSequentialGroup()
                .add(TEXT)
                .add(26, 26, 26)
                .add(jLabel33)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(Serial)
                .addContainerGap(43, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel3Layout.createSequentialGroup()
                .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(TEXT)
                    .add(Serial)
                    .add(jLabel33))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.ipadx = 23;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        Connected.getContentPane().add(jPanel3, gridBagConstraints);

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(resourceMap.getString("jPanel5.border.title"))); // NOI18N
        jPanel5.setName("jPanel5"); // NOI18N

        jLabel34.setText(resourceMap.getString("jLabel34.text")); // NOI18N
        jLabel34.setName("jLabel34"); // NOI18N

        TEXT1.setText(resourceMap.getString("TEXT1.text")); // NOI18N
        TEXT1.setName("TEXT1"); // NOI18N

        ConectBreathSerial.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        ConectBreathSerial.setText(resourceMap.getString("ConectBreathSerial.text")); // NOI18N

        org.jdesktop.layout.GroupLayout jPanel5Layout = new org.jdesktop.layout.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel5Layout.createSequentialGroup()
                .add(TEXT1)
                .add(26, 26, 26)
                .add(jLabel34)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(ConectBreathSerial)
                .addContainerGap(43, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel5Layout.createSequentialGroup()
                .add(jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(TEXT1)
                    .add(jLabel34)
                    .add(ConectBreathSerial))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.ipadx = 23;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(3, 0, 0, 0);
        Connected.getContentPane().add(jPanel5, gridBagConstraints);

        Connected.setBounds(0, 20, 470, 200);
        mainPanel2.add(Connected, javax.swing.JLayeredPane.DEFAULT_LAYER);

        SignalAnalysis.setClosable(true);
        SignalAnalysis.setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        SignalAnalysis.setIconifiable(true);
        SignalAnalysis.setMaximizable(true);
        SignalAnalysis.setResizable(true);
        SignalAnalysis.setTitle(resourceMap.getString("SignalAnalysis.title")); // NOI18N
        SignalAnalysis.setName("SignalAnalysis"); // NOI18N
        SignalAnalysis.setVisible(true);

        jTabbedPane1.setMinimumSize(new java.awt.Dimension(0, 0));
        jTabbedPane1.setName("jTabbedPane1"); // NOI18N

        jPanel14.setName("jPanel14"); // NOI18N
        jPanel14.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel17.setText(resourceMap.getString("jLabel17.text")); // NOI18N
        jLabel17.setName("jLabel17"); // NOI18N
        jPanel14.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 30, -1, -1));

        jLabel18.setText(resourceMap.getString("jLabel18.text")); // NOI18N
        jLabel18.setName("jLabel18"); // NOI18N
        jPanel14.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 60, -1, -1));

        XbeePackets.setText(resourceMap.getString("XbeePackets.text")); // NOI18N
        XbeePackets.setName("XbeePackets"); // NOI18N
        jPanel14.add(XbeePackets, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 30, -1, -1));

        XbeeTotal.setText(resourceMap.getString("XbeeTotal.text")); // NOI18N
        XbeeTotal.setName("XbeeTotal"); // NOI18N
        jPanel14.add(XbeeTotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 60, -1, -1));

        GoodPackets.setText(resourceMap.getString("GoodPackets.text")); // NOI18N
        GoodPackets.setName("GoodPackets"); // NOI18N
        jPanel14.add(GoodPackets, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 3, 140, -1));

        Xbeegood.setText(resourceMap.getString("Xbeegood.text")); // NOI18N
        Xbeegood.setName("Xbeegood"); // NOI18N
        jPanel14.add(Xbeegood, new org.netbeans.lib.awtextra.AbsoluteConstraints(148, 3, -1, -1));

        jTabbedPane1.addTab(resourceMap.getString("jPanel14.TabConstraints.tabTitle"), jPanel14); // NOI18N

        jPanel15.setName("jPanel15"); // NOI18N
        jPanel15.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel21.setText(resourceMap.getString("jLabel21.text")); // NOI18N
        jLabel21.setName("jLabel21"); // NOI18N
        jPanel15.add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 10, 110, -1));

        BreathPacket.setText(resourceMap.getString("BreathPacket.text")); // NOI18N
        BreathPacket.setName("BreathPacket"); // NOI18N
        jPanel15.add(BreathPacket, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 10, -1, -1));

        jLabel23.setText(resourceMap.getString("jLabel23.text")); // NOI18N
        jLabel23.setName("jLabel23"); // NOI18N
        jPanel15.add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 30, -1, -1));

        BreathTotal.setText(resourceMap.getString("BreathTotal.text")); // NOI18N
        BreathTotal.setName("BreathTotal"); // NOI18N
        jPanel15.add(BreathTotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 30, -1, -1));

        jTabbedPane1.addTab(resourceMap.getString("jPanel15.TabConstraints.tabTitle"), jPanel15); // NOI18N

        SignalStrength.setName("SignalStrength"); // NOI18N
        SignalStrength.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel19.setText(resourceMap.getString("jLabel19.text")); // NOI18N
        jLabel19.setName("jLabel19"); // NOI18N
        SignalStrength.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 30, -1, -1));

        jLabel25.setText(resourceMap.getString("jLabel25.text")); // NOI18N
        jLabel25.setName("jLabel25"); // NOI18N
        SignalStrength.add(jLabel25, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        label10.setIcon(resourceMap.getIcon("label10.icon")); // NOI18N
        label10.setText(resourceMap.getString("label10.text")); // NOI18N
        label10.setName("label10"); // NOI18N
        SignalStrength.add(label10, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 30, -1, -1));

        label20.setIcon(resourceMap.getIcon("label20.icon")); // NOI18N
        label20.setText(resourceMap.getString("label20.text")); // NOI18N
        label20.setName("label20"); // NOI18N
        SignalStrength.add(label20, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 30, -1, -1));

        label30.setIcon(resourceMap.getIcon("label30.icon")); // NOI18N
        label30.setText(resourceMap.getString("label30.text")); // NOI18N
        label30.setName("label30"); // NOI18N
        SignalStrength.add(label30, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 30, -1, -1));

        label40.setIcon(resourceMap.getIcon("label40.icon")); // NOI18N
        label40.setText(resourceMap.getString("label40.text")); // NOI18N
        label40.setName("label40"); // NOI18N
        SignalStrength.add(label40, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 30, -1, -1));

        jTabbedPane1.addTab(resourceMap.getString("SignalStrength.TabConstraints.tabTitle"), SignalStrength); // NOI18N

        jPanel16.setName("jPanel16"); // NOI18N
        jPanel16.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel22.setText(resourceMap.getString("jLabel22.text")); // NOI18N
        jLabel22.setName("jLabel22"); // NOI18N
        jPanel16.add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 20, -1, -1));

        Batt.setText(resourceMap.getString("Batt.text")); // NOI18N
        Batt.setName("Batt"); // NOI18N
        jPanel16.add(Batt, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 20, -1, -1));

        jTabbedPane1.addTab(resourceMap.getString("jPanel16.TabConstraints.tabTitle"), jPanel16); // NOI18N

        org.jdesktop.layout.GroupLayout SignalAnalysisLayout = new org.jdesktop.layout.GroupLayout(SignalAnalysis.getContentPane());
        SignalAnalysis.getContentPane().setLayout(SignalAnalysisLayout);
        SignalAnalysisLayout.setHorizontalGroup(
            SignalAnalysisLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jTabbedPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 256, Short.MAX_VALUE)
        );
        SignalAnalysisLayout.setVerticalGroup(
            SignalAnalysisLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jTabbedPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 154, Short.MAX_VALUE)
        );

        SignalAnalysis.setBounds(1060, 480, 280, 200);
        mainPanel2.add(SignalAnalysis, javax.swing.JLayeredPane.DEFAULT_LAYER);

        ECGContainer.setClosable(true);
        ECGContainer.setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        ECGContainer.setIconifiable(true);
        ECGContainer.setMaximizable(true);
        ECGContainer.setResizable(true);
        ECGContainer.setTitle(resourceMap.getString("ECGContainer.title")); // NOI18N
        ECGContainer.setName("ECGContainer"); // NOI18N
        ECGContainer.setVisible(true);

        jLabel16.setText(resourceMap.getString("jLabel16.text")); // NOI18N
        jLabel16.setName("jLabel16"); // NOI18N

        jMenuBar4.setName("jMenuBar4"); // NOI18N

        jMenu4.setText(resourceMap.getString("jMenu4.text")); // NOI18N
        jMenu4.setName("jMenu4"); // NOI18N

        jMenuItem1.setText(resourceMap.getString("jMenuItem1.text")); // NOI18N
        jMenuItem1.setName("jMenuItem1"); // NOI18N
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem1);

        jMenuItem2.setText(resourceMap.getString("jMenuItem2.text")); // NOI18N
        jMenuItem2.setName("jMenuItem2"); // NOI18N
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem2);

        jMenuBar4.add(jMenu4);

        ECGContainer.setJMenuBar(jMenuBar4);

        org.jdesktop.layout.GroupLayout ECGContainerLayout = new org.jdesktop.layout.GroupLayout(ECGContainer.getContentPane());
        ECGContainer.getContentPane().setLayout(ECGContainerLayout);
        ECGContainerLayout.setHorizontalGroup(
            ECGContainerLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(ECGContainerLayout.createSequentialGroup()
                .add(575, 575, 575)
                .add(jLabel16))
        );
        ECGContainerLayout.setVerticalGroup(
            ECGContainerLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(ECGContainerLayout.createSequentialGroup()
                .add(112, 112, 112)
                .add(jLabel16))
        );

        ECGContainer.setBounds(0, 370, 550, 350);
        mainPanel2.add(ECGContainer, javax.swing.JLayeredPane.DEFAULT_LAYER);

        RealTimeData.setClosable(true);
        RealTimeData.setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        RealTimeData.setIconifiable(true);
        RealTimeData.setMaximizable(true);
        RealTimeData.setResizable(true);
        RealTimeData.setTitle(resourceMap.getString("RealTimeData.title")); // NOI18N
        RealTimeData.setName("RealTimeData"); // NOI18N
        RealTimeData.setVisible(true);
        RealTimeData.getContentPane().setLayout(new java.awt.GridBagLayout());

        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder(resourceMap.getString("jPanel8.border.title"))); // NOI18N
        jPanel8.setAutoscrolls(true);
        jPanel8.setName("jPanel8"); // NOI18N

        BaseLabel.setFont(resourceMap.getFont("BaseTempValue.font")); // NOI18N
        BaseLabel.setText(resourceMap.getString("BaseLabel.text")); // NOI18N
        BaseLabel.setName("BaseLabel"); // NOI18N

        BaseTempValue.setFont(resourceMap.getFont("BaseTempValue.font")); // NOI18N
        BaseTempValue.setText(resourceMap.getString("BaseTempValue.text")); // NOI18N
        BaseTempValue.setName("BaseTempValue"); // NOI18N

        TympTempValue.setFont(resourceMap.getFont("BaseTempValue.font")); // NOI18N
        TympTempValue.setText(resourceMap.getString("TympTempValue.text")); // NOI18N
        TympTempValue.setName("TympTempValue"); // NOI18N

        Tymplabel.setFont(resourceMap.getFont("BaseTempValue.font")); // NOI18N
        Tymplabel.setText(resourceMap.getString("Tymplabel.text")); // NOI18N
        Tymplabel.setName("Tymplabel"); // NOI18N

        jLabel1.setFont(resourceMap.getFont("BaseTempValue.font")); // NOI18N
        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N

        DiffTempValue.setFont(resourceMap.getFont("BaseTempValue.font")); // NOI18N
        DiffTempValue.setText(resourceMap.getString("DiffTempValue.text")); // NOI18N
        DiffTempValue.setName("DiffTempValue"); // NOI18N

        org.jdesktop.layout.GroupLayout jPanel8Layout = new org.jdesktop.layout.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel8Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel8Layout.createSequentialGroup()
                        .add(BaseLabel)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 142, Short.MAX_VALUE)
                        .add(BaseTempValue))
                    .add(jPanel8Layout.createSequentialGroup()
                        .add(jPanel8Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                            .add(org.jdesktop.layout.GroupLayout.LEADING, jLabel1)
                            .add(org.jdesktop.layout.GroupLayout.LEADING, Tymplabel))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 99, Short.MAX_VALUE)
                        .add(jPanel8Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                            .add(TympTempValue)
                            .add(DiffTempValue))))
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel8Layout.createSequentialGroup()
                .add(jPanel8Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(BaseLabel)
                    .add(BaseTempValue))
                .add(10, 10, 10)
                .add(jPanel8Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(Tymplabel)
                    .add(TympTempValue))
                .add(8, 8, 8)
                .add(jPanel8Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel1)
                    .add(DiffTempValue)))
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 91;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        RealTimeData.getContentPane().add(jPanel8, gridBagConstraints);

        jPanel18.setBorder(javax.swing.BorderFactory.createTitledBorder(resourceMap.getString("jPanel18.border.title"))); // NOI18N
        jPanel18.setName("jPanel18"); // NOI18N

        jLabel2.setFont(resourceMap.getFont("jLabel2.font")); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel2.setText(resourceMap.getString("jLabel2.text")); // NOI18N
        jLabel2.setName("jLabel2"); // NOI18N

        BreathVal.setFont(resourceMap.getFont("jLabel2.font")); // NOI18N
        BreathVal.setText(resourceMap.getString("BreathVal.text")); // NOI18N
        BreathVal.setName("BreathVal"); // NOI18N

        BreathPer.setFont(resourceMap.getFont("jLabel2.font")); // NOI18N
        BreathPer.setText(resourceMap.getString("BreathPer.text")); // NOI18N
        BreathPer.setName("BreathPer"); // NOI18N

        jLabel3.setFont(resourceMap.getFont("jLabel2.font")); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel3.setText(resourceMap.getString("jLabel3.text")); // NOI18N
        jLabel3.setName("jLabel3"); // NOI18N

        org.jdesktop.layout.GroupLayout jPanel18Layout = new org.jdesktop.layout.GroupLayout(jPanel18);
        jPanel18.setLayout(jPanel18Layout);
        jPanel18Layout.setHorizontalGroup(
            jPanel18Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel18Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel18Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jLabel2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 160, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 138, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 97, Short.MAX_VALUE)
                .add(jPanel18Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(BreathVal)
                    .add(BreathPer, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 27, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel18Layout.setVerticalGroup(
            jPanel18Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel18Layout.createSequentialGroup()
                .add(jPanel18Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel2)
                    .add(BreathVal))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel18Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel3)
                    .add(BreathPer))
                .addContainerGap(6, Short.MAX_VALUE))
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipadx = 89;
        gridBagConstraints.ipady = -14;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        RealTimeData.getContentPane().add(jPanel18, gridBagConstraints);

        jPanel19.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(resourceMap.getString("jPanel19.border.border.title")))); // NOI18N
        jPanel19.setName("jPanel19"); // NOI18N

        LightSensorLabel.setFont(resourceMap.getFont("REDLED.font")); // NOI18N
        LightSensorLabel.setText(resourceMap.getString("LightSensorLabel.text")); // NOI18N
        LightSensorLabel.setName("LightSensorLabel"); // NOI18N

        ECGLabel.setFont(resourceMap.getFont("REDLED.font")); // NOI18N
        ECGLabel.setText(resourceMap.getString("ECGLabel.text")); // NOI18N
        ECGLabel.setName("ECGLabel"); // NOI18N

        RESPLabel.setFont(resourceMap.getFont("REDLED.font")); // NOI18N
        RESPLabel.setText(resourceMap.getString("RESPLabel.text")); // NOI18N
        RESPLabel.setName("RESPLabel"); // NOI18N

        SPO2Label.setFont(resourceMap.getFont("REDLED.font")); // NOI18N
        SPO2Label.setText(resourceMap.getString("SPO2Label.text")); // NOI18N
        SPO2Label.setName("SPO2Label"); // NOI18N

        PulseLabel.setFont(resourceMap.getFont("REDLED.font")); // NOI18N
        PulseLabel.setText(resourceMap.getString("PulseLabel.text")); // NOI18N
        PulseLabel.setName("PulseLabel"); // NOI18N

        jLabel24.setFont(resourceMap.getFont("REDLED.font")); // NOI18N
        jLabel24.setText(resourceMap.getString("jLabel24.text")); // NOI18N
        jLabel24.setName("jLabel24"); // NOI18N

        jLabel26.setFont(resourceMap.getFont("REDLED.font")); // NOI18N
        jLabel26.setText(resourceMap.getString("jLabel26.text")); // NOI18N
        jLabel26.setName("jLabel26"); // NOI18N

        jLabel8.setFont(resourceMap.getFont("REDLED.font")); // NOI18N
        jLabel8.setText(resourceMap.getString("jLabel8.text")); // NOI18N
        jLabel8.setName("jLabel8"); // NOI18N

        LightValue.setFont(resourceMap.getFont("SPO2Value.font")); // NOI18N
        LightValue.setText(resourceMap.getString("LightValue.text")); // NOI18N
        LightValue.setName("LightValue"); // NOI18N

        ECGValue.setFont(resourceMap.getFont("SPO2Value.font")); // NOI18N
        ECGValue.setText(resourceMap.getString("ECGValue.text")); // NOI18N
        ECGValue.setName("ECGValue"); // NOI18N

        RESPValue.setFont(resourceMap.getFont("SPO2Value.font")); // NOI18N
        RESPValue.setText(resourceMap.getString("RESPValue.text")); // NOI18N
        RESPValue.setName("RESPValue"); // NOI18N

        SPO2Value.setFont(resourceMap.getFont("SPO2Value.font")); // NOI18N
        SPO2Value.setText(resourceMap.getString("SPO2Value.text")); // NOI18N
        SPO2Value.setName("SPO2Value"); // NOI18N

        PulseValue.setFont(resourceMap.getFont("SPO2Value.font")); // NOI18N
        PulseValue.setText(resourceMap.getString("PulseValue.text")); // NOI18N
        PulseValue.setName("PulseValue"); // NOI18N

        REDLED.setFont(resourceMap.getFont("SPO2Value.font")); // NOI18N
        REDLED.setText(resourceMap.getString("REDLED.text")); // NOI18N
        REDLED.setName("REDLED"); // NOI18N

        IRLED.setFont(resourceMap.getFont("SPO2Value.font")); // NOI18N
        IRLED.setText(resourceMap.getString("IRLED.text")); // NOI18N
        IRLED.setName("IRLED"); // NOI18N

        RESP.setFont(resourceMap.getFont("SPO2Value.font")); // NOI18N
        RESP.setText(resourceMap.getString("RESP.text")); // NOI18N
        RESP.setName("RESP"); // NOI18N

        org.jdesktop.layout.GroupLayout jPanel19Layout = new org.jdesktop.layout.GroupLayout(jPanel19);
        jPanel19.setLayout(jPanel19Layout);
        jPanel19Layout.setHorizontalGroup(
            jPanel19Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel19Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel19Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel19Layout.createSequentialGroup()
                        .add(LightSensorLabel)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 128, Short.MAX_VALUE)
                        .add(LightValue))
                    .add(jPanel19Layout.createSequentialGroup()
                        .add(ECGLabel)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 164, Short.MAX_VALUE)
                        .add(ECGValue))
                    .add(jPanel19Layout.createSequentialGroup()
                        .add(RESPLabel)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 208, Short.MAX_VALUE)
                        .add(RESPValue))
                    .add(jPanel19Layout.createSequentialGroup()
                        .add(SPO2Label)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 209, Short.MAX_VALUE)
                        .add(SPO2Value))
                    .add(jPanel19Layout.createSequentialGroup()
                        .add(PulseLabel)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 212, Short.MAX_VALUE)
                        .add(PulseValue))
                    .add(jPanel19Layout.createSequentialGroup()
                        .add(jLabel24)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 157, Short.MAX_VALUE)
                        .add(REDLED))
                    .add(jPanel19Layout.createSequentialGroup()
                        .add(jLabel26)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 166, Short.MAX_VALUE)
                        .add(IRLED))
                    .add(jPanel19Layout.createSequentialGroup()
                        .add(jLabel8)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 169, Short.MAX_VALUE)
                        .add(RESP)))
                .addContainerGap())
        );
        jPanel19Layout.setVerticalGroup(
            jPanel19Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel19Layout.createSequentialGroup()
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(jPanel19Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(LightSensorLabel)
                    .add(LightValue))
                .add(5, 5, 5)
                .add(jPanel19Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(ECGLabel)
                    .add(ECGValue))
                .add(5, 5, 5)
                .add(jPanel19Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(RESPLabel)
                    .add(RESPValue))
                .add(5, 5, 5)
                .add(jPanel19Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(SPO2Label)
                    .add(SPO2Value))
                .add(5, 5, 5)
                .add(jPanel19Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(PulseLabel)
                    .add(PulseValue))
                .add(8, 8, 8)
                .add(jPanel19Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel24)
                    .add(REDLED))
                .add(8, 8, 8)
                .add(jPanel19Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel26)
                    .add(IRLED))
                .add(8, 8, 8)
                .add(jPanel19Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel8)
                    .add(RESP)))
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.ipadx = 120;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 15, 0);
        RealTimeData.getContentPane().add(jPanel19, gridBagConstraints);

        RealTimeData.setBounds(1020, 20, 360, 460);
        mainPanel2.add(RealTimeData, javax.swing.JLayeredPane.DEFAULT_LAYER);

        RealTime.setClosable(true);
        RealTime.setIconifiable(true);
        RealTime.setMaximizable(true);
        RealTime.setResizable(true);
        RealTime.setTitle(resourceMap.getString("RealTime.title")); // NOI18N
        RealTime.setName("RealTime"); // NOI18N
        RealTime.setVisible(true);
        RealTime.getContentPane().setLayout(new java.awt.GridBagLayout());

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(resourceMap.getString("jPanel2.border.title"))); // NOI18N
        jPanel2.setName("jPanel2"); // NOI18N
        jPanel2.setLayout(new java.awt.GridBagLayout());

        jLabel4.setText(resourceMap.getString("jLabel4.text")); // NOI18N
        jLabel4.setName("jLabel4"); // NOI18N
        jPanel2.add(jLabel4, new java.awt.GridBagConstraints());

        BreathSerialChart1.setText(resourceMap.getString("BreathSerialChart1.text")); // NOI18N
        BreathSerialChart1.setMaximumSize(new java.awt.Dimension(79, 23));
        BreathSerialChart1.setMinimumSize(new java.awt.Dimension(79, 23));
        BreathSerialChart1.setName("BreathSerialChart1"); // NOI18N
        BreathSerialChart1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BreathSerialChart1ActionPerformed(evt);
            }
        });
        jPanel2.add(BreathSerialChart1, new java.awt.GridBagConstraints());

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 163;
        gridBagConstraints.ipady = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        RealTime.getContentPane().add(jPanel2, gridBagConstraints);

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(resourceMap.getString("jPanel6.border.title"))); // NOI18N
        jPanel6.setName("jPanel6"); // NOI18N
        jPanel6.setLayout(new java.awt.GridBagLayout());

        jLabel6.setText(resourceMap.getString("jLabel6.text")); // NOI18N
        jLabel6.setName("jLabel6"); // NOI18N
        jPanel6.add(jLabel6, new java.awt.GridBagConstraints());

        TempSerialChart.setText(resourceMap.getString("TempSerialChart.text")); // NOI18N
        TempSerialChart.setName("TempSerialChart"); // NOI18N
        TempSerialChart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TempSerialChartActionPerformed(evt);
            }
        });
        jPanel6.add(TempSerialChart, new java.awt.GridBagConstraints());

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipadx = 139;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        RealTime.getContentPane().add(jPanel6, gridBagConstraints);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(resourceMap.getString("jPanel1.border.title"))); // NOI18N
        jPanel1.setName("jPanel1"); // NOI18N
        jPanel1.setLayout(new java.awt.GridBagLayout());

        jLabel14.setText(resourceMap.getString("jLabel14.text")); // NOI18N
        jLabel14.setName("jLabel14"); // NOI18N
        jPanel1.add(jLabel14, new java.awt.GridBagConstraints());

        LightSerialChart2.setText(resourceMap.getString("LightSerialChart2.text")); // NOI18N
        LightSerialChart2.setName("LightSerialChart2"); // NOI18N
        LightSerialChart2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LightSerialChart2ActionPerformed(evt);
            }
        });
        jPanel1.add(LightSerialChart2, new java.awt.GridBagConstraints());

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.ipadx = 139;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        RealTime.getContentPane().add(jPanel1, gridBagConstraints);

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(resourceMap.getString("jPanel4.border.title"))); // NOI18N
        jPanel4.setName("jPanel4"); // NOI18N
        jPanel4.setLayout(new java.awt.GridBagLayout());

        jLabel31.setText(resourceMap.getString("jLabel31.text")); // NOI18N
        jLabel31.setName("jLabel31"); // NOI18N
        jPanel4.add(jLabel31, new java.awt.GridBagConstraints());

        RESPSerial.setText(resourceMap.getString("RESPSerial.text")); // NOI18N
        RESPSerial.setName("RESPSerial"); // NOI18N
        RESPSerial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RESPSerialActionPerformed(evt);
            }
        });
        jPanel4.add(RESPSerial, new java.awt.GridBagConstraints());

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.ipadx = 139;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        RealTime.getContentPane().add(jPanel4, gridBagConstraints);

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(resourceMap.getString("jPanel7.border.title"))); // NOI18N
        jPanel7.setName("jPanel7"); // NOI18N
        jPanel7.setLayout(new java.awt.GridBagLayout());

        jLabel10.setText(resourceMap.getString("jLabel10.text")); // NOI18N
        jLabel10.setName("jLabel10"); // NOI18N
        jPanel7.add(jLabel10, new java.awt.GridBagConstraints());

        ECGSerialChart.setText(resourceMap.getString("ECGSerialChart.text")); // NOI18N
        ECGSerialChart.setName("ECGSerialChart"); // NOI18N
        ECGSerialChart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ECGSerialChartActionPerformed(evt);
            }
        });
        jPanel7.add(ECGSerialChart, new java.awt.GridBagConstraints());

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.ipadx = 139;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        RealTime.getContentPane().add(jPanel7, gridBagConstraints);

        jPanel10.setBorder(javax.swing.BorderFactory.createTitledBorder(resourceMap.getString("jPanel10.border.title"))); // NOI18N
        jPanel10.setName("jPanel10"); // NOI18N
        jPanel10.setLayout(new java.awt.GridBagLayout());

        jLabel27.setText(resourceMap.getString("jLabel27.text")); // NOI18N
        jLabel27.setName("jLabel27"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(28, 75, 0, 0);
        jPanel10.add(jLabel27, gridBagConstraints);

        IRSerialChart.setText(resourceMap.getString("IRSerialChart.text")); // NOI18N
        IRSerialChart.setName("IRSerialChart"); // NOI18N
        IRSerialChart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IRSerialChartActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(22, 6, 0, 0);
        jPanel10.add(IRSerialChart, gridBagConstraints);

        StartSPO2.setText(resourceMap.getString("StartSPO2.text")); // NOI18N
        StartSPO2.setName("StartSPO2"); // NOI18N
        StartSPO2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StartSPO2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.ipadx = -8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(4, 23, 6, 0);
        jPanel10.add(StartSPO2, gridBagConstraints);

        StopSPO2.setText(resourceMap.getString("StopSPO2.text")); // NOI18N
        StopSPO2.setName("StopSPO2"); // NOI18N
        StopSPO2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StopSPO2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.ipadx = -18;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(4, 14, 6, 0);
        jPanel10.add(StopSPO2, gridBagConstraints);

        ResetSPO2.setText(resourceMap.getString("ResetSPO2.text")); // NOI18N
        ResetSPO2.setName("ResetSPO2"); // NOI18N
        ResetSPO2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ResetSPO2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(4, 30, 6, 23);
        jPanel10.add(ResetSPO2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.ipadx = -11;
        gridBagConstraints.ipady = -24;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        RealTime.getContentPane().add(jPanel10, gridBagConstraints);

        jPanel11.setBorder(javax.swing.BorderFactory.createTitledBorder(resourceMap.getString("jPanel11.border.title"))); // NOI18N
        jPanel11.setName("jPanel11"); // NOI18N
        jPanel11.setLayout(new java.awt.GridBagLayout());

        OXISerialChart1.setText(resourceMap.getString("OXISerialChart1.text")); // NOI18N
        OXISerialChart1.setName("OXISerialChart1"); // NOI18N
        OXISerialChart1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OXISerialChart1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(20, 7, 0, 0);
        jPanel11.add(OXISerialChart1, gridBagConstraints);

        jLabel12.setText(resourceMap.getString("jLabel12.text")); // NOI18N
        jLabel12.setName("jLabel12"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(20, 80, 0, 0);
        jPanel11.add(jLabel12, gridBagConstraints);

        StartPulse.setText(resourceMap.getString("StartPulse.text")); // NOI18N
        StartPulse.setName("StartPulse"); // NOI18N
        StartPulse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StartPulseActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = -20;
        gridBagConstraints.ipady = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(1, 30, 0, 0);
        jPanel11.add(StartPulse, gridBagConstraints);

        StopPulse.setText(resourceMap.getString("StopPulse.text")); // NOI18N
        StopPulse.setName("StopPulse"); // NOI18N
        StopPulse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StopPulseActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.ipadx = -19;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(1, 20, 0, 0);
        jPanel11.add(StopPulse, gridBagConstraints);

        ResetPulse.setText(resourceMap.getString("ResetPulse.text")); // NOI18N
        ResetPulse.setName("ResetPulse"); // NOI18N
        ResetPulse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ResetPulseActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = -3;
        gridBagConstraints.ipady = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(1, 27, 0, 27);
        jPanel11.add(ResetPulse, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.ipadx = -12;
        gridBagConstraints.ipady = -12;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 9, 0);
        RealTime.getContentPane().add(jPanel11, gridBagConstraints);

        RealTime.setBounds(560, 20, 470, 530);
        mainPanel2.add(RealTime, javax.swing.JLayeredPane.DEFAULT_LAYER);

        GPSPanel.setClosable(true);
        GPSPanel.setIconifiable(true);
        GPSPanel.setMaximizable(true);
        GPSPanel.setResizable(true);
        GPSPanel.setTitle(resourceMap.getString("GPSPanel.title")); // NOI18N
        GPSPanel.setName("GPSPanel"); // NOI18N
        GPSPanel.setVisible(true);

        CPSFrame.setBorder(javax.swing.BorderFactory.createTitledBorder(resourceMap.getString("CPSFrame.border.title"))); // NOI18N
        CPSFrame.setName("CPSFrame"); // NOI18N
        CPSFrame.setLayout(new java.awt.GridBagLayout());

        jLabel35.setText(resourceMap.getString("jLabel35.text")); // NOI18N
        jLabel35.setName("jLabel35"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(22, 26, 0, 0);
        CPSFrame.add(jLabel35, gridBagConstraints);

        DistanceGPS.setText(resourceMap.getString("DistanceGPS.text")); // NOI18N
        DistanceGPS.setName("DistanceGPS"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(22, 52, 0, 64);
        CPSFrame.add(DistanceGPS, gridBagConstraints);

        GPS.setText(resourceMap.getString("GPS.text")); // NOI18N
        GPS.setName("GPS"); // NOI18N
        GPS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GPSActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.ipadx = 34;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(18, 101, 23, 0);
        CPSFrame.add(GPS, gridBagConstraints);

        org.jdesktop.layout.GroupLayout GPSPanelLayout = new org.jdesktop.layout.GroupLayout(GPSPanel.getContentPane());
        GPSPanel.getContentPane().setLayout(GPSPanelLayout);
        GPSPanelLayout.setHorizontalGroup(
            GPSPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(GPSPanelLayout.createSequentialGroup()
                .addContainerGap()
                .add(CPSFrame, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 407, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        GPSPanelLayout.setVerticalGroup(
            GPSPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(GPSPanelLayout.createSequentialGroup()
                .add(10, 10, 10)
                .add(CPSFrame, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 88, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        GPSPanel.setBounds(0, 210, 470, 160);
        mainPanel2.add(GPSPanel, javax.swing.JLayeredPane.DEFAULT_LAYER);

        mainPanel.add(mainPanel2);
        mainPanel2.setBounds(0, 0, 1380, 720);

        menuBar.setName("menuBar"); // NOI18N

        fileMenu.setText(resourceMap.getString("fileMenu.text")); // NOI18N
        fileMenu.setName("fileMenu"); // NOI18N

        ConnectBreath.setText(resourceMap.getString("ConnectBreath.text")); // NOI18N
        ConnectBreath.setName("ConnectBreath"); // NOI18N

        ConnectBoard.setText(resourceMap.getString("ConnectBoard.text")); // NOI18N
        ConnectBoard.setName("ConnectBoard"); // NOI18N
        ConnectBoard.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ConnectBoardActionPerformed(evt);
            }
        });
        ConnectBreath.add(ConnectBoard);

        fileMenu.add(ConnectBreath);

        Connect.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_I, java.awt.event.InputEvent.CTRL_MASK));
        Connect.setText(resourceMap.getString("Connect.text")); // NOI18N
        Connect.setName("Connect"); // NOI18N
        Connect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ConnectActionPerformed(evt);
            }
        });
        fileMenu.add(Connect);

        Disconnect.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_D, java.awt.event.InputEvent.CTRL_MASK));
        Disconnect.setText(resourceMap.getString("Disconnect.text")); // NOI18N
        Disconnect.setName("Disconnect"); // NOI18N
        Disconnect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DisconnectActionPerformed(evt);
            }
        });
        fileMenu.add(Disconnect);

        Net_Chat.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        Net_Chat.setText(resourceMap.getString("Net_Chat.text")); // NOI18N
        Net_Chat.setName("Net_Chat"); // NOI18N
        Net_Chat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Net_ChatActionPerformed(evt);
            }
        });
        fileMenu.add(Net_Chat);

        javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance(ecgjava2.ECGJAVa2App.class).getContext().getActionMap(ECGJAVa2View.class, this);
        exitMenuItem.setAction(actionMap.get("quit")); // NOI18N
        exitMenuItem.setName("exitMenuItem"); // NOI18N
        exitMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(exitMenuItem);

        menuBar.add(fileMenu);

        jMenu2.setText(resourceMap.getString("jMenu2.text")); // NOI18N
        jMenu2.setName("jMenu2"); // NOI18N

        jMenuItem4.setText(resourceMap.getString("jMenuItem4.text")); // NOI18N
        jMenuItem4.setName("jMenuItem4"); // NOI18N
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem4);

        Dialog_box.setText(resourceMap.getString("Dialog_box.text")); // NOI18N
        Dialog_box.setName("Dialog_box"); // NOI18N
        Dialog_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Dialog_boxActionPerformed(evt);
            }
        });
        jMenu2.add(Dialog_box);

        menuBar.add(jMenu2);

        jMenu9.setText(resourceMap.getString("jMenu9.text")); // NOI18N
        jMenu9.setName("jMenu9"); // NOI18N

        ShowConnected.setText(resourceMap.getString("ShowConnected.text")); // NOI18N
        ShowConnected.setName("ShowConnected"); // NOI18N
        ShowConnected.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ShowConnectedActionPerformed(evt);
            }
        });
        jMenu9.add(ShowConnected);

        ShowTemp.setText(resourceMap.getString("ShowTemp.text")); // NOI18N
        ShowTemp.setName("ShowTemp"); // NOI18N
        ShowTemp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ShowTempActionPerformed(evt);
            }
        });
        jMenu9.add(ShowTemp);

        ShowInbound.setText(resourceMap.getString("ShowInbound.text")); // NOI18N
        ShowInbound.setName("ShowInbound"); // NOI18N
        ShowInbound.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ShowInboundActionPerformed(evt);
            }
        });
        jMenu9.add(ShowInbound);

        ShowRTD.setText(resourceMap.getString("ShowRTD.text")); // NOI18N
        ShowRTD.setName("ShowRTD"); // NOI18N
        ShowRTD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ShowRTDActionPerformed(evt);
            }
        });
        jMenu9.add(ShowRTD);

        ShowECG.setText(resourceMap.getString("ShowECG.text")); // NOI18N
        ShowECG.setName("ShowECG"); // NOI18N
        ShowECG.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ShowECGActionPerformed(evt);
            }
        });
        jMenu9.add(ShowECG);

        ShowSignal.setText(resourceMap.getString("ShowSignal.text")); // NOI18N
        ShowSignal.setName("ShowSignal"); // NOI18N
        ShowSignal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ShowSignalActionPerformed(evt);
            }
        });
        jMenu9.add(ShowSignal);

        ShowALL.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_W, java.awt.event.InputEvent.CTRL_MASK));
        ShowALL.setText(resourceMap.getString("ShowALL.text")); // NOI18N
        ShowALL.setName("ShowALL"); // NOI18N
        ShowALL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ShowALLActionPerformed(evt);
            }
        });
        jMenu9.add(ShowALL);

        menuBar.add(jMenu9);

        jMenu6.setText(resourceMap.getString("jMenu6.text")); // NOI18N

        jMenuItem10.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem10.setText(resourceMap.getString("jMenuItem10.text")); // NOI18N
        jMenuItem10.setName("jMenuItem10"); // NOI18N
        jMenuItem10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem10ActionPerformed(evt);
            }
        });
        jMenu6.add(jMenuItem10);

        menuBar.add(jMenu6);

        helpMenu.setText(resourceMap.getString("helpMenu.text")); // NOI18N
        helpMenu.setName("helpMenu"); // NOI18N

        aboutMenuItem.setAction(actionMap.get("showAboutBox")); // NOI18N
        aboutMenuItem.setName("aboutMenuItem"); // NOI18N
        helpMenu.add(aboutMenuItem);

        menuBar.add(helpMenu);

        Main.setName("Main"); // NOI18N

        org.jdesktop.layout.GroupLayout MainLayout = new org.jdesktop.layout.GroupLayout(Main.getContentPane());
        Main.getContentPane().setLayout(MainLayout);
        MainLayout.setHorizontalGroup(
            MainLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 400, Short.MAX_VALUE)
        );
        MainLayout.setVerticalGroup(
            MainLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 300, Short.MAX_VALUE)
        );

        jLabel20.setText(resourceMap.getString("jLabel20.text")); // NOI18N
        jLabel20.setName("jLabel20"); // NOI18N

        jCheckBox1.setText(resourceMap.getString("jCheckBox1.text")); // NOI18N
        jCheckBox1.setName("jCheckBox1"); // NOI18N

        setComponent(mainPanel);
        setMenuBar(menuBar);
    }// </editor-fold>//GEN-END:initComponents

    //disconnect serial
    
    //connect serial
    
    private void ConnectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ConnectActionPerformed

       Thread Comm = null;
            try {
            try {
                Comm = new CommPortOpen(null);
            } catch (IOException ex) {
                Logger.getLogger(ECGJAVa2View.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(null, "Could not connect to Serial", "Error", JOptionPane.ERROR_MESSAGE);
            }
            } catch (NoSuchPortException ex) {
                Logger.getLogger(ECGJAVa2View.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(null, "Could not connect to Serial", "Error", JOptionPane.ERROR_MESSAGE);
            } catch (PortInUseException ex) {
                Logger.getLogger(ECGJAVa2View.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(null, "Could not connect to Serial", "Error", JOptionPane.ERROR_MESSAGE);
            } catch (UnsupportedCommOperationException ex) {
                Logger.getLogger(ECGJAVa2View.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(null, "Could not connect to Serial", "Error", JOptionPane.ERROR_MESSAGE);
            }
       Comm.start();
       InitialTime = System.currentTimeMillis();
       
       System.out.println(CommPortOpen.getConnected());
        if (CommPortOpen.getConnected()){
            Serial.setText(CommPortOpen.getPortName());
            Serial.repaint();
        }
        else{
            Serial.setText("<Default>");
        }
    }//GEN-LAST:event_ConnectActionPerformed

    //get dialog box
    
    private void Dialog_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Dialog_boxActionPerformed

        Dialog = new Dialog_box();
        Dialog.setVisible(true);
        Dialogconnected = true;
    }//GEN-LAST:event_Dialog_boxActionPerformed

    private void ShowConnectedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ShowConnectedActionPerformed

        //Connected.show();
        Connected.setVisible(true);
    }//GEN-LAST:event_ShowConnectedActionPerformed

    private void ShowTempActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ShowTempActionPerformed

        //Temperature.show();
        GPSPanel.setVisible(true);
    }//GEN-LAST:event_ShowTempActionPerformed

    private void ShowInboundActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ShowInboundActionPerformed

        //Inbound.show();
        RealTime.setVisible(true);
    }//GEN-LAST:event_ShowInboundActionPerformed

    private void ShowRTDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ShowRTDActionPerformed

        //GenDAta.show();
        RealTimeData.setVisible(true);
    }//GEN-LAST:event_ShowRTDActionPerformed

    private void ShowECGActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ShowECGActionPerformed

        //ECG.show();
        ECGContainer.setVisible(true);

    }//GEN-LAST:event_ShowECGActionPerformed

    private void ShowALLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ShowALLActionPerformed

        //Connected.show();
        Connected.setVisible(true);
        //Temperature.show();
        GPSPanel.setVisible(true);
        //Inbound.show();
        RealTimeData.setVisible(true);
        //GenDAta.show();
        RealTime.setVisible(true);
        //ECG.show();
        ECGContainer.setVisible(true);
        SignalAnalysis.setVisible(true);

    }//GEN-LAST:event_ShowALLActionPerformed

    private void TempSerialChartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TempSerialChartActionPerformed

        if (!CommPortOpen.getConnected()){
            JOptionPane.showMessageDialog(null, "Not Connected to Serial", "Error", JOptionPane.ERROR_MESSAGE);
        }
        else{
            chart.ThreadedChartTemp.main(null);
        }
        // Get Real Time Graph
        // Serial Based
    }//GEN-LAST:event_TempSerialChartActionPerformed

    private void ConnectBoardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ConnectBoardActionPerformed

        Thread Comm = null;
            try {
            try {
                Comm = new CommPortOpenBreath(null);
            } catch (IOException ex) {
                Logger.getLogger(ECGJAVa2View.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(null, "Could not connect to Serial", "Error", JOptionPane.ERROR_MESSAGE);
            }
            } catch (NoSuchPortException ex) {
                Logger.getLogger(ECGJAVa2View.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(null, "Could not connect to Serial", "Error", JOptionPane.ERROR_MESSAGE);

            } catch (PortInUseException ex) {
                Logger.getLogger(ECGJAVa2View.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(null, "Could not connect to Serial", "Error", JOptionPane.ERROR_MESSAGE);

            } catch (UnsupportedCommOperationException ex) {
                Logger.getLogger(ECGJAVa2View.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(null, "Could not connect to Serial", "Error", JOptionPane.ERROR_MESSAGE);

            }
       Comm.start();

        if (CommPortOpenBreath.getConnected()){
            ConectBreathSerial.setText(CommPortOpenBreath.getPortName());
            ConectBreathSerial.repaint();
        }
        else{
            ConectBreathSerial.setText("<Default>");
        }

    }//GEN-LAST:event_ConnectBoardActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        FileChooser.main(null);
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void BreathSerialChart1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BreathSerialChart1ActionPerformed

        if (!CommPortOpenBreath.getConnected()){
            JOptionPane.showMessageDialog(null, "Not Connected to Serial", "Error", JOptionPane.ERROR_MESSAGE);
        }
        else{
            chart.ThreadedChartBreathvalue.main(null);
        }
    }//GEN-LAST:event_BreathSerialChart1ActionPerformed

    private void exitMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitMenuItemActionPerformed

         Disconnect_Close();
    }//GEN-LAST:event_exitMenuItemActionPerformed

    private void jMenuItem10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem10ActionPerformed

    if (CommPortOpen.getConnected()){
        if(CommPortOpen.thePortID.getName().startsWith("/dev/tty.usbmodem") || CommPortOpen.thePortID.getName().startsWith("/dev/cu.usbmodem")){
            JOptionPane.showMessageDialog(null, "Not Connected to Wireless Serial Port", "Error", JOptionPane.ERROR_MESSAGE);
        }
        else if (CommPortOpen.thePortID.getName().startsWith("/dev/tty.usbserial")) {
            SignalAnalysis Var = new SignalAnalysis();
            Var.run();
            SignalAnalysisGuard = true;
        }
    }
    else{
        JOptionPane.showMessageDialog(null, "Not Connected", "Error", JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_jMenuItem10ActionPerformed

    private void ShowSignalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ShowSignalActionPerformed
        if (CommPortOpen.getConnected()){
            SignalAnalysis.setVisible(true);
        }
        else {
            JOptionPane.showMessageDialog(null, "Not Connected to Serial", "Error", JOptionPane.ERROR_MESSAGE);

        }
    }//GEN-LAST:event_ShowSignalActionPerformed

    private void LightSerialChart2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LightSerialChart2ActionPerformed

        if (!CommPortOpen.getConnected()){
            JOptionPane.showMessageDialog(null, "Not Connected to Serial", "Error", JOptionPane.ERROR_MESSAGE);
        } else{
            chart.ThreadedChartLight.main(null);
        }
}//GEN-LAST:event_LightSerialChart2ActionPerformed

    private void ResetSPO2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ResetSPO2ActionPerformed
        getSPO2.reset();
}//GEN-LAST:event_ResetSPO2ActionPerformed

    private void StopSPO2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StopSPO2ActionPerformed
        getSPO2.setSPO2Guard(false);
}//GEN-LAST:event_StopSPO2ActionPerformed

    private void StartSPO2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StartSPO2ActionPerformed
        getSPO2.setSPO2Guard(true);
    }//GEN-LAST:event_StartSPO2ActionPerformed

    private void IRSerialChartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IRSerialChartActionPerformed

        if (!CommPortOpen.getConnected()){
            JOptionPane.showMessageDialog(null, "Not Connected to Serial", "Error", JOptionPane.ERROR_MESSAGE);
        } else{
            chart.ThreadedChartIR.main(null);
        }
}//GEN-LAST:event_IRSerialChartActionPerformed

    private void StopPulseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StopPulseActionPerformed
        getBPM.setBPMGuard(false);
}//GEN-LAST:event_StopPulseActionPerformed

    private void StartPulseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StartPulseActionPerformed
        getBPM.setBPMGuard(true);
}//GEN-LAST:event_StartPulseActionPerformed

    private void ResetPulseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ResetPulseActionPerformed
        getBPM.reset();
}//GEN-LAST:event_ResetPulseActionPerformed

    private void OXISerialChart1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OXISerialChart1ActionPerformed

        if (!CommPortOpen.getConnected()){
            JOptionPane.showMessageDialog(null, "Not Connected to Serial", "Error", JOptionPane.ERROR_MESSAGE);
        } else{
            chart.ThreadedChartOXI.main(null);
        }
}//GEN-LAST:event_OXISerialChart1ActionPerformed

    private void ECGSerialChartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ECGSerialChartActionPerformed


        if (!CommPortOpen.getConnected()){
            JOptionPane.showMessageDialog(null, "Not Connected to Serial", "Error", JOptionPane.ERROR_MESSAGE);
        } else{
            chart.ThreadedChartECG.main(null);
        }

        // Get Real Time Graph
        // Serial Based
}//GEN-LAST:event_ECGSerialChartActionPerformed

    private void RESPSerialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RESPSerialActionPerformed

        if (!CommPortOpen.getConnected()){
            JOptionPane.showMessageDialog(null, "Not Connected to Serial", "Error", JOptionPane.ERROR_MESSAGE);
        } else{
            chart.ThreadedChartRESP.main(null);
        }
    }//GEN-LAST:event_RESPSerialActionPerformed

    private void GPSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GPSActionPerformed
        String Dir = System.getProperty("user.dir");
            try {
                Process child = Runtime.getRuntime().exec("java -jar " + Dir + "/gpsylon_bin-0.5.3/gpsylon-0.5.3.jar");
            } catch (IOException ex) {
                Logger.getLogger(ECGJAVa2View.class.getName()).log(Level.SEVERE, null, ex);
            }
    }//GEN-LAST:event_GPSActionPerformed

private void DisconnectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DisconnectActionPerformed
        
        Serial.setText("<Default>");
        Serial.repaint();
        
        try {
            CommPortOpen.closeConnection();
        } catch (IOException ex) {
            Logger.getLogger(ECGJAVa2View.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            WriteLogFilesOthers.closeWriteFile();
        } catch (IOException ex) {
            Logger.getLogger(ECGJAVa2View.class.getName()).log(Level.SEVERE, null, ex);
        }
}//GEN-LAST:event_DisconnectActionPerformed

private void RecordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RecordActionPerformed
        if(Record.isSelected()){
            try {
                LogFiles.WriteLogFilesOthers.main(null);
                LogFiles.WriteLogFilesTemp.main(null);
                LogFiles.WriteLogFilesVitals.main(null);
            } catch (IOException ex) {
                Logger.getLogger(ECGJAVa2View.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(null, "Error initializing files", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
}//GEN-LAST:event_RecordActionPerformed

private void Net_ChatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Net_ChatActionPerformed
            
    String Dir = System.getProperty("user.dir");
    System.out.println(Dir);

            try {
                Process child = Runtime.getRuntime().exec("java -jar " + Dir + "/Chat/Chat.jar");
            } catch (IOException ex) {
                Logger.getLogger(ECGJAVa2View.class.getName()).log(Level.SEVERE, null, ex);
            }
    
}//GEN-LAST:event_Net_ChatActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed

        ECGContainer.setVisible(false);
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed

        if (!CommPortOpen.getConnected()) {
            JOptionPane.showMessageDialog(null, "Not Connected to Serial", "Error", JOptionPane.ERROR_MESSAGE);
        } else {
            chart.ThreadedChartECGembed.main(null);
            ECGContainer.repaint();
            ECGContainer.updateUI();
        }
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void Disconnect_Close(){

        if(CommPortOpen.getConnected()){
            CommPortOpen.setConnectGuard(false);
        }
        System.exit(0);
    }
    
    static boolean getDialogConnected(){
        return Dialogconnected;
    }

    static boolean getSocketConnected(){
        return socketConnected;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel BaseLabel;
    public static javax.swing.JLabel BaseTempValue;
    public static javax.swing.JLabel Batt;
    public static javax.swing.JLabel BreathPacket;
    public static javax.swing.JLabel BreathPer;
    private javax.swing.JButton BreathSerialChart1;
    public static javax.swing.JLabel BreathTotal;
    public static javax.swing.JLabel BreathVal;
    private javax.swing.JPanel CPSFrame;
    public static javax.swing.JLabel ConectBreathSerial;
    private javax.swing.JMenuItem Connect;
    private javax.swing.JMenuItem ConnectBoard;
    private javax.swing.JMenu ConnectBreath;
    private javax.swing.JInternalFrame Connected;
    private javax.swing.JMenuItem Dialog_box;
    public static javax.swing.JLabel DiffTempValue;
    private javax.swing.JMenuItem Disconnect;
    public static javax.swing.JLabel DistanceGPS;
    public static javax.swing.JInternalFrame ECGContainer;
    private javax.swing.JLabel ECGLabel;
    private javax.swing.JButton ECGSerialChart;
    public static javax.swing.JLabel ECGValue;
    private javax.swing.JButton GPS;
    private javax.swing.JInternalFrame GPSPanel;
    private javax.swing.JLabel GoodPackets;
    public static javax.swing.JLabel IRLED;
    private javax.swing.JButton IRSerialChart;
    private javax.swing.JLabel LightSensorLabel;
    private javax.swing.JButton LightSerialChart2;
    public static javax.swing.JLabel LightValue;
    private javax.swing.JFrame Main;
    private javax.swing.JMenuItem Net_Chat;
    private javax.swing.JButton OXISerialChart1;
    private javax.swing.JLabel PulseLabel;
    public static javax.swing.JLabel PulseValue;
    public static javax.swing.JLabel REDLED;
    public static javax.swing.JLabel RESP;
    private javax.swing.JLabel RESPLabel;
    private javax.swing.JButton RESPSerial;
    public static javax.swing.JLabel RESPValue;
    private javax.swing.JInternalFrame RealTime;
    private javax.swing.JInternalFrame RealTimeData;
    protected static javax.swing.JCheckBox Record;
    private javax.swing.JButton ResetPulse;
    private javax.swing.JButton ResetSPO2;
    private javax.swing.JLabel SPO2Label;
    public static javax.swing.JLabel SPO2Value;
    private javax.swing.JLabel Serial;
    private javax.swing.JMenuItem ShowALL;
    private javax.swing.JMenuItem ShowConnected;
    private javax.swing.JMenuItem ShowECG;
    private javax.swing.JMenuItem ShowInbound;
    private javax.swing.JMenuItem ShowRTD;
    private javax.swing.JMenuItem ShowSignal;
    private javax.swing.JMenuItem ShowTemp;
    public static javax.swing.JInternalFrame SignalAnalysis;
    public static javax.swing.JPanel SignalStrength;
    private javax.swing.JButton StartPulse;
    private javax.swing.JButton StartSPO2;
    private javax.swing.JButton StopPulse;
    private javax.swing.JButton StopSPO2;
    private javax.swing.JLabel TEXT;
    private javax.swing.JLabel TEXT1;
    private javax.swing.JButton TempSerialChart;
    public static javax.swing.JLabel TympTempValue;
    private javax.swing.JLabel Tymplabel;
    public static javax.swing.JLabel XbeePackets;
    public static javax.swing.JLabel XbeeTotal;
    public static javax.swing.JLabel Xbeegood;
    private javax.swing.Box.Filler filler1;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    public static javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    public static javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenu jMenu6;
    private javax.swing.JMenu jMenu9;
    private javax.swing.JMenuBar jMenuBar4;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem10;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JTabbedPane jTabbedPane1;
    public static javax.swing.JLabel label10;
    public static javax.swing.JLabel label20;
    public static javax.swing.JLabel label30;
    public static javax.swing.JLabel label40;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JDesktopPane mainPanel2;
    private javax.swing.JMenuBar menuBar;
    // End of variables declaration//GEN-END:variables

}
