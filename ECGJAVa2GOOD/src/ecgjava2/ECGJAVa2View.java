/*
 * ECGJAVa2View.java
 */

package ecgjava2;


import LogFiles.WriteLogFiles;
import gnu.io.NoSuchPortException;
import gnu.io.PortInUseException;
import gnu.io.UnsupportedCommOperationException;
import java.io.IOException;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import org.jdesktop.application.Action;
import org.jdesktop.application.ResourceMap;
import org.jdesktop.application.SingleFrameApplication;
import org.jdesktop.application.FrameView;
import org.jdesktop.application.TaskMonitor;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import javax.swing.Timer;
import javax.swing.Icon;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JOptionPane;


/**
 * The application's main frame.
 */
public class ECGJAVa2View extends FrameView {
    //define stuff
    protected static boolean SignalAnalysisGuard = false;
    protected static long InitialTime;
    protected static boolean SPO2guard = false;
    private final Timer messageTimer;
    private final Timer busyIconTimer;
    private final Icon idleIcon;
    private final Icon[] busyIcons = new Icon[15];
    private int busyIconIndex = 0;
    protected JFrame Dialog, GPSDialog;
    protected static int selection;
    private JDialog aboutBox;
    protected static boolean socketConnected = false;
    private boolean DialogGPSconnected = false;

    public ECGJAVa2View(SingleFrameApplication app) {
        super(app);

        // making the gui
        initComponents();

            ECGJAVa2View.label40.setVisible(false);
            ECGJAVa2View.label30.setVisible(false);
            ECGJAVa2View.label20.setVisible(false);
            ECGJAVa2View.label10.setVisible(false);

        Main.addWindowListener(new WindowAdapter(){
            public void windowClosing(WindowEvent we){
                    if (CommPortOpen.getConnectGuard() == true) {
                        CommPortOpen.setConnectGuard(false);
                    }
                    System.exit(0);
            }
        });


        // status bar initialization - message timeout, idle icon and busy animation, etc
        ResourceMap resourceMap = getResourceMap();
        int messageTimeout = resourceMap.getInteger("StatusBar.messageTimeout");
        messageTimer = new Timer(messageTimeout, new ActionListener() {
            public void actionPerformed(ActionEvent e) {
            }
        });
        messageTimer.setRepeats(false);
        int busyAnimationRate = resourceMap.getInteger("StatusBar.busyAnimationRate");
        for (int i = 0; i < busyIcons.length; i++) {
            busyIcons[i] = resourceMap.getIcon("StatusBar.busyIcons[" + i + "]");
        }
        busyIconTimer = new Timer(busyAnimationRate, new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                busyIconIndex = (busyIconIndex + 1) % busyIcons.length;
            }
        });
        idleIcon = resourceMap.getIcon("StatusBar.idleIcon");
        // connecting action tasks to status bar via TaskMonitor
        TaskMonitor taskMonitor = new TaskMonitor(getApplication().getContext());
        taskMonitor.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                String propertyName = evt.getPropertyName();
            }
        });
    }

    //invoke on action
    @Action
    public void showAboutBox() {
        if (aboutBox == null) {
            JFrame mainFrame = ECGJAVa2App.getApplication().getMainFrame();
            aboutBox = new ECGJAVa2AboutBox(mainFrame);
            aboutBox.setLocationRelativeTo(mainFrame);
        }
        ECGJAVa2App.getApplication().show(aboutBox);
    }
    
    
    static boolean DBconnected = false;
    public static boolean Dialogconnected = false;
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();
        GenDAta = new javax.swing.JInternalFrame();
        jTabbedPane6 = new javax.swing.JTabbedPane();
        jPanel6 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        BreathVal = new javax.swing.JLabel();
        BreathPer = new javax.swing.JLabel();
        ConectBreathSerial = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        BreathChartSQL = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        BreathSerialChart1 = new javax.swing.JButton();
        jPanel8 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jMenuBar5 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        EXITGEN = new javax.swing.JMenuItem();
        ConnectBreath = new javax.swing.JMenu();
        ConnectBoard = new javax.swing.JMenuItem();
        ECGContainer = new javax.swing.JInternalFrame();
        jLabel16 = new javax.swing.JLabel();
        jMenuBar4 = new javax.swing.JMenuBar();
        jMenu4 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        Connected = new javax.swing.JInternalFrame();
        TEXT = new javax.swing.JLabel();
        Serial = new javax.swing.JLabel();
        ConnectDB = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        Temperature = new javax.swing.JInternalFrame();
        jTabbedPane5 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        BaseLabel = new javax.swing.JLabel();
        Tymplabel = new javax.swing.JLabel();
        DiffTempValue = new javax.swing.JLabel();
        TympTempValue = new javax.swing.JLabel();
        BaseTempValue = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        TempSerialChart = new javax.swing.JButton();
        TempSQLChart = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jMenuBar2 = new javax.swing.JMenuBar();
        jMenu3 = new javax.swing.JMenu();
        EXITTEMP = new javax.swing.JMenuItem();
        SignalAnalysis = new javax.swing.JInternalFrame();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel14 = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        XbeePackets = new javax.swing.JLabel();
        XbeeTotal = new javax.swing.JLabel();
        GoodPackets = new javax.swing.JLabel();
        Xbeegood = new javax.swing.JLabel();
        jPanel15 = new javax.swing.JPanel();
        jLabel21 = new javax.swing.JLabel();
        BreathPacket = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        BreathTotal = new javax.swing.JLabel();
        SignalStrength = new javax.swing.JPanel();
        jLabel19 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        label10 = new javax.swing.JLabel();
        label20 = new javax.swing.JLabel();
        label30 = new javax.swing.JLabel();
        label40 = new javax.swing.JLabel();
        jPanel16 = new javax.swing.JPanel();
        jLabel22 = new javax.swing.JLabel();
        Batt = new javax.swing.JLabel();
        Inbound = new javax.swing.JInternalFrame();
        ECGPane = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        LightSensorLabel = new javax.swing.JLabel();
        LightValue = new javax.swing.JLabel();
        ECGLabel = new javax.swing.JLabel();
        ECGValue = new javax.swing.JLabel();
        RESPLabel = new javax.swing.JLabel();
        RESPValue = new javax.swing.JLabel();
        SPO2Label = new javax.swing.JLabel();
        SPO2Value = new javax.swing.JLabel();
        PulseLabel = new javax.swing.JLabel();
        PulseValue = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        REDLED = new javax.swing.JLabel();
        IRLED = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        RESP = new javax.swing.JLabel();
        jPanel17 = new javax.swing.JPanel();
        jLabel27 = new javax.swing.JLabel();
        IRSerialChart = new javax.swing.JButton();
        jLabel28 = new javax.swing.JLabel();
        IRSQLChart = new javax.swing.JButton();
        StartSPO2 = new javax.swing.JButton();
        StopSPO2 = new javax.swing.JButton();
        ResetSPO2 = new javax.swing.JButton();
        jPanel10 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        ECGSerialChart = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        ECGSQLChart = new javax.swing.JButton();
        jPanel9 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        OXISerialChart1 = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        OXISQLChart1 = new javax.swing.JButton();
        jLabel29 = new javax.swing.JLabel();
        ResetPulse = new javax.swing.JButton();
        StartPulse = new javax.swing.JButton();
        StopPulse = new javax.swing.JButton();
        jPanel11 = new javax.swing.JPanel();
        RESPSql = new javax.swing.JButton();
        jLabel30 = new javax.swing.JLabel();
        RESPSerial = new javax.swing.JButton();
        jLabel31 = new javax.swing.JLabel();
        jPanel12 = new javax.swing.JPanel();
        GPS = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        Socket = new javax.swing.JLabel();
        ConnectSocket = new javax.swing.JButton();
        ConnectSocket1 = new javax.swing.JButton();
        jPanel13 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        LightSerialChart2 = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        LightSQLChart2 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        jMenuBar3 = new javax.swing.JMenuBar();
        jMenu5 = new javax.swing.JMenu();
        EXITINBOUND = new javax.swing.JMenuItem();
        menuBar = new javax.swing.JMenuBar();
        javax.swing.JMenu fileMenu = new javax.swing.JMenu();
        Connect = new javax.swing.JMenuItem();
        Disconnect = new javax.swing.JMenuItem();
        ConnectToDB = new javax.swing.JMenuItem();
        CloseDB = new javax.swing.JMenuItem();
        javax.swing.JMenuItem exitMenuItem = new javax.swing.JMenuItem();
        jMenu9 = new javax.swing.JMenu();
        ShowConnected = new javax.swing.JMenuItem();
        ShowTemp = new javax.swing.JMenuItem();
        ShowInbound = new javax.swing.JMenuItem();
        ShowGen = new javax.swing.JMenuItem();
        ShowECG = new javax.swing.JMenuItem();
        ShowSignal = new javax.swing.JMenuItem();
        ShowALL = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        Dialog_box = new javax.swing.JMenuItem();
        jMenu6 = new javax.swing.JMenu();
        jMenuItem10 = new javax.swing.JMenuItem();
        javax.swing.JMenu helpMenu = new javax.swing.JMenu();
        javax.swing.JMenuItem aboutMenuItem = new javax.swing.JMenuItem();
        Main = new javax.swing.JFrame();
        jLabel20 = new javax.swing.JLabel();

        mainPanel.setName("mainPanel"); // NOI18N
        mainPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        GenDAta.setClosable(true);
        GenDAta.setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        GenDAta.setIconifiable(true);
        GenDAta.setMaximizable(true);
        GenDAta.setResizable(true);
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(ecgjava2.ECGJAVa2App.class).getContext().getResourceMap(ECGJAVa2View.class);
        GenDAta.setTitle(resourceMap.getString("GenDAta.title")); // NOI18N
        GenDAta.setName("GenDAta"); // NOI18N
        GenDAta.setVisible(true);
        GenDAta.getContentPane().setLayout(null);

        jTabbedPane6.setName("jTabbedPane6"); // NOI18N

        jPanel6.setName("jPanel6"); // NOI18N

        jLabel2.setFont(resourceMap.getFont("jLabel2.font")); // NOI18N
        jLabel2.setText(resourceMap.getString("jLabel2.text")); // NOI18N
        jLabel2.setName("jLabel2"); // NOI18N

        jLabel3.setFont(resourceMap.getFont("jLabel3.font")); // NOI18N
        jLabel3.setText(resourceMap.getString("jLabel3.text")); // NOI18N
        jLabel3.setName("jLabel3"); // NOI18N

        BreathVal.setFont(resourceMap.getFont("BreathVal.font")); // NOI18N
        BreathVal.setText(resourceMap.getString("BreathVal.text")); // NOI18N
        BreathVal.setName("BreathVal"); // NOI18N

        BreathPer.setFont(resourceMap.getFont("BreathPer.font")); // NOI18N
        BreathPer.setText(resourceMap.getString("BreathPer.text")); // NOI18N
        BreathPer.setName("BreathPer"); // NOI18N

        ConectBreathSerial.setText("Not Connected to Serial");

        org.jdesktop.layout.GroupLayout jPanel6Layout = new org.jdesktop.layout.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jLabel2)
                    .add(jLabel3))
                .add(18, 18, 18)
                .add(jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(BreathVal)
                    .add(BreathPer))
                .addContainerGap(34, Short.MAX_VALUE))
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap(56, Short.MAX_VALUE)
                .add(ConectBreathSerial)
                .add(54, 54, 54))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel6Layout.createSequentialGroup()
                .add(38, 38, 38)
                .add(jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel2)
                    .add(BreathVal))
                .add(18, 18, 18)
                .add(jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(BreathPer)
                    .add(jLabel3))
                .add(18, 18, 18)
                .add(ConectBreathSerial)
                .addContainerGap(32, Short.MAX_VALUE))
        );

        jTabbedPane6.addTab(resourceMap.getString("jPanel6.TabConstraints.tabTitle"), jPanel6); // NOI18N

        jPanel7.setName("jPanel7"); // NOI18N

        BreathChartSQL.setText(resourceMap.getString("BreathChartSQL.text")); // NOI18N
        BreathChartSQL.setName("BreathChartSQL"); // NOI18N
        BreathChartSQL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BreathChartSQLActionPerformed(evt);
            }
        });

        jLabel4.setText(resourceMap.getString("jLabel4.text")); // NOI18N
        jLabel4.setName("jLabel4"); // NOI18N

        jLabel5.setText(resourceMap.getString("jLabel5.text")); // NOI18N
        jLabel5.setName("jLabel5"); // NOI18N

        BreathSerialChart1.setText(resourceMap.getString("BreathSerialChart1.text")); // NOI18N
        BreathSerialChart1.setName("BreathSerialChart1"); // NOI18N
        BreathSerialChart1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BreathSerialChart1ActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel7Layout = new org.jdesktop.layout.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel7Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel7Layout.createSequentialGroup()
                        .add(jLabel5)
                        .add(55, 55, 55))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel7Layout.createSequentialGroup()
                        .add(jLabel4)
                        .add(30, 30, 30))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel7Layout.createSequentialGroup()
                        .add(jPanel7Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                            .add(org.jdesktop.layout.GroupLayout.LEADING, BreathChartSQL, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 225, Short.MAX_VALUE)
                            .add(BreathSerialChart1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 225, Short.MAX_VALUE))
                        .addContainerGap())))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel7Layout.createSequentialGroup()
                .add(32, 32, 32)
                .add(jLabel4)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(BreathSerialChart1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 23, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jLabel5)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(BreathChartSQL)
                .addContainerGap(25, Short.MAX_VALUE))
        );

        jTabbedPane6.addTab(resourceMap.getString("jPanel7.TabConstraints.tabTitle"), jPanel7); // NOI18N

        jPanel8.setName("jPanel8"); // NOI18N

        jScrollPane2.setName("jScrollPane2"); // NOI18N

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable2.setName("jTable2"); // NOI18N
        jScrollPane2.setViewportView(jTable2);

        org.jdesktop.layout.GroupLayout jPanel8Layout = new org.jdesktop.layout.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .add(jScrollPane2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 219, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .add(jScrollPane2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 124, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane6.addTab(resourceMap.getString("jPanel8.TabConstraints.tabTitle"), jPanel8); // NOI18N

        GenDAta.getContentPane().add(jTabbedPane6);
        jTabbedPane6.setBounds(20, 20, 280, 210);

        jMenuBar5.setName("jMenuBar5"); // NOI18N

        jMenu1.setText(resourceMap.getString("jMenu1.text")); // NOI18N
        jMenu1.setName("jMenu1"); // NOI18N

        EXITGEN.setText(resourceMap.getString("EXITGEN.text")); // NOI18N
        EXITGEN.setName("EXITGEN"); // NOI18N
        EXITGEN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EXITGENActionPerformed(evt);
            }
        });
        jMenu1.add(EXITGEN);

        jMenuBar5.add(jMenu1);

        ConnectBreath.setText(resourceMap.getString("ConnectBreath.text")); // NOI18N
        ConnectBreath.setName("ConnectBreath"); // NOI18N

        ConnectBoard.setText(resourceMap.getString("ConnectBoard.text")); // NOI18N
        ConnectBoard.setName("ConnectBoard"); // NOI18N
        ConnectBoard.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ConnectBoardActionPerformed(evt);
            }
        });
        ConnectBreath.add(ConnectBoard);

        jMenuBar5.add(ConnectBreath);

        GenDAta.setJMenuBar(jMenuBar5);

        mainPanel.add(GenDAta, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 120, 340, 310));

        ECGContainer.setClosable(true);
        ECGContainer.setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        ECGContainer.setIconifiable(true);
        ECGContainer.setResizable(true);
        ECGContainer.setTitle(resourceMap.getString("ECGContainer.title")); // NOI18N
        ECGContainer.setName("ECGContainer"); // NOI18N
        ECGContainer.setVisible(true);

        jLabel16.setText(resourceMap.getString("jLabel16.text")); // NOI18N
        jLabel16.setName("jLabel16"); // NOI18N

        jMenuBar4.setName("jMenuBar4"); // NOI18N

        jMenu4.setText(resourceMap.getString("jMenu4.text")); // NOI18N
        jMenu4.setName("jMenu4"); // NOI18N

        jMenuItem1.setText(resourceMap.getString("jMenuItem1.text")); // NOI18N
        jMenuItem1.setName("jMenuItem1"); // NOI18N
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem1);

        jMenuItem2.setText(resourceMap.getString("jMenuItem2.text")); // NOI18N
        jMenuItem2.setName("jMenuItem2"); // NOI18N
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem2);

        jMenuBar4.add(jMenu4);

        ECGContainer.setJMenuBar(jMenuBar4);

        org.jdesktop.layout.GroupLayout ECGContainerLayout = new org.jdesktop.layout.GroupLayout(ECGContainer.getContentPane());
        ECGContainer.getContentPane().setLayout(ECGContainerLayout);
        ECGContainerLayout.setHorizontalGroup(
            ECGContainerLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, ECGContainerLayout.createSequentialGroup()
                .addContainerGap(600, Short.MAX_VALUE)
                .add(jLabel16)
                .add(598, 598, 598))
        );
        ECGContainerLayout.setVerticalGroup(
            ECGContainerLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(ECGContainerLayout.createSequentialGroup()
                .add(112, 112, 112)
                .add(jLabel16)
                .addContainerGap(161, Short.MAX_VALUE))
        );

        mainPanel.add(ECGContainer, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 410, 1400, -1));

        Connected.setClosable(true);
        Connected.setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        Connected.setIconifiable(true);
        Connected.setResizable(true);
        Connected.setTitle(resourceMap.getString("Connected.title")); // NOI18N
        Connected.setName("Connected"); // NOI18N
        Connected.setVisible(true);
        Connected.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        TEXT.setText(resourceMap.getString("TEXT.text")); // NOI18N
        TEXT.setName("TEXT"); // NOI18N
        Connected.getContentPane().add(TEXT, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 11, -1, -1));

        Serial.setText(resourceMap.getString("Serial.text")); // NOI18N
        Serial.setName("Serial"); // NOI18N
        Connected.getContentPane().add(Serial, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 10, -1, -1));

        ConnectDB.setText(resourceMap.getString("ConnectDB.text")); // NOI18N
        ConnectDB.setName("ConnectDB"); // NOI18N
        Connected.getContentPane().add(ConnectDB, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 30, 160, 20));

        jLabel32.setText(resourceMap.getString("jLabel32.text")); // NOI18N
        jLabel32.setName("jLabel32"); // NOI18N
        Connected.getContentPane().add(jLabel32, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 30, -1, -1));

        jLabel33.setText(resourceMap.getString("jLabel33.text")); // NOI18N
        jLabel33.setName("jLabel33"); // NOI18N
        Connected.getContentPane().add(jLabel33, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 10, -1, -1));

        mainPanel.add(Connected, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 340, 110));

        Temperature.setClosable(true);
        Temperature.setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        Temperature.setIconifiable(true);
        Temperature.setMaximizable(true);
        Temperature.setResizable(true);
        Temperature.setTitle(resourceMap.getString("Temperature.title")); // NOI18N
        Temperature.setName("Temperature"); // NOI18N
        Temperature.setVisible(true);
        Temperature.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTabbedPane5.setName("jTabbedPane5"); // NOI18N

        jPanel1.setName("jPanel1"); // NOI18N

        BaseLabel.setFont(resourceMap.getFont("BaseTempValue.font")); // NOI18N
        BaseLabel.setText(resourceMap.getString("BaseLabel.text")); // NOI18N
        BaseLabel.setName("BaseLabel"); // NOI18N

        Tymplabel.setFont(resourceMap.getFont("BaseTempValue.font")); // NOI18N
        Tymplabel.setText(resourceMap.getString("Tymplabel.text")); // NOI18N
        Tymplabel.setName("Tymplabel"); // NOI18N

        DiffTempValue.setFont(resourceMap.getFont("BaseTempValue.font")); // NOI18N
        DiffTempValue.setText(resourceMap.getString("DiffTempValue.text")); // NOI18N
        DiffTempValue.setName("DiffTempValue"); // NOI18N

        TympTempValue.setFont(resourceMap.getFont("BaseTempValue.font")); // NOI18N
        TympTempValue.setText(resourceMap.getString("TympTempValue.text")); // NOI18N
        TympTempValue.setName("TympTempValue"); // NOI18N

        BaseTempValue.setFont(resourceMap.getFont("BaseTempValue.font")); // NOI18N
        BaseTempValue.setText(resourceMap.getString("BaseTempValue.text")); // NOI18N
        BaseTempValue.setName("BaseTempValue"); // NOI18N

        jLabel1.setFont(resourceMap.getFont("BaseTempValue.font")); // NOI18N
        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .add(84, 84, 84)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(jLabel1)
                        .addContainerGap())
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                            .add(jPanel1Layout.createSequentialGroup()
                                .add(BaseLabel)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 79, Short.MAX_VALUE)
                                .add(BaseTempValue))
                            .add(jPanel1Layout.createSequentialGroup()
                                .add(Tymplabel)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 37, Short.MAX_VALUE)
                                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(DiffTempValue)
                                    .add(TympTempValue))))
                        .add(92, 92, 92))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .add(33, 33, 33)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(BaseTempValue)
                    .add(BaseLabel))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel1Layout.createSequentialGroup()
                        .add(TympTempValue)
                        .add(49, 49, 49))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel1Layout.createSequentialGroup()
                        .add(Tymplabel)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jLabel1)
                            .add(DiffTempValue))
                        .add(18, 18, 18)))
                .addContainerGap(32, Short.MAX_VALUE))
        );

        jTabbedPane5.addTab(resourceMap.getString("jPanel1.TabConstraints.tabTitle"), jPanel1); // NOI18N

        jPanel4.setName("jPanel4"); // NOI18N

        TempSerialChart.setText(resourceMap.getString("TempSerialChart.text")); // NOI18N
        TempSerialChart.setName("TempSerialChart"); // NOI18N
        TempSerialChart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TempSerialChartActionPerformed(evt);
            }
        });

        TempSQLChart.setText(resourceMap.getString("TempSQLChart.text")); // NOI18N
        TempSQLChart.setName("TempSQLChart"); // NOI18N
        TempSQLChart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TempSQLChartActionPerformed(evt);
            }
        });

        jLabel6.setText(resourceMap.getString("jLabel6.text")); // NOI18N
        jLabel6.setName("jLabel6"); // NOI18N

        jLabel7.setText(resourceMap.getString("jLabel7.text")); // NOI18N
        jLabel7.setName("jLabel7"); // NOI18N

        org.jdesktop.layout.GroupLayout jPanel4Layout = new org.jdesktop.layout.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel4Layout.createSequentialGroup()
                        .add(jLabel6)
                        .add(120, 120, 120))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel4Layout.createSequentialGroup()
                        .add(TempSerialChart, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 405, Short.MAX_VALUE)
                        .addContainerGap())
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel4Layout.createSequentialGroup()
                        .add(jLabel7)
                        .add(140, 140, 140))
                    .add(jPanel4Layout.createSequentialGroup()
                        .add(TempSQLChart, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 405, Short.MAX_VALUE)
                        .addContainerGap())))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel4Layout.createSequentialGroup()
                .add(jLabel6)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(TempSerialChart, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 45, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jLabel7)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(TempSQLChart, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 45, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane5.addTab(resourceMap.getString("jPanel4.TabConstraints.tabTitle"), jPanel4); // NOI18N

        jPanel5.setName("jPanel5"); // NOI18N

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable1.setName("jTable1"); // NOI18N
        jScrollPane1.setViewportView(jTable1);

        org.jdesktop.layout.GroupLayout jPanel5Layout = new org.jdesktop.layout.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 399, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 124, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane5.addTab(resourceMap.getString("jPanel5.TabConstraints.tabTitle"), jPanel5); // NOI18N

        Temperature.getContentPane().add(jTabbedPane5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 460, 210));

        jMenuBar2.setName("jMenuBar2"); // NOI18N

        jMenu3.setText(resourceMap.getString("jMenu3.text")); // NOI18N
        jMenu3.setName("jMenu3"); // NOI18N

        EXITTEMP.setText(resourceMap.getString("EXITTEMP.text")); // NOI18N
        EXITTEMP.setName("EXITTEMP"); // NOI18N
        EXITTEMP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EXITTEMPActionPerformed(evt);
            }
        });
        jMenu3.add(EXITTEMP);

        jMenuBar2.add(jMenu3);

        Temperature.setJMenuBar(jMenuBar2);

        mainPanel.add(Temperature, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 20, 510, 280));

        SignalAnalysis.setClosable(true);
        SignalAnalysis.setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        SignalAnalysis.setIconifiable(true);
        SignalAnalysis.setMaximizable(true);
        SignalAnalysis.setResizable(true);
        SignalAnalysis.setTitle(resourceMap.getString("SignalAnalysis.title")); // NOI18N
        SignalAnalysis.setName("SignalAnalysis"); // NOI18N
        SignalAnalysis.setVisible(true);

        jTabbedPane1.setName("jTabbedPane1"); // NOI18N

        jPanel14.setName("jPanel14"); // NOI18N

        jLabel17.setText(resourceMap.getString("jLabel17.text")); // NOI18N
        jLabel17.setName("jLabel17"); // NOI18N

        jLabel18.setText(resourceMap.getString("jLabel18.text")); // NOI18N
        jLabel18.setName("jLabel18"); // NOI18N

        XbeePackets.setText(resourceMap.getString("XbeePackets.text")); // NOI18N
        XbeePackets.setName("XbeePackets"); // NOI18N

        XbeeTotal.setText(resourceMap.getString("XbeeTotal.text")); // NOI18N
        XbeeTotal.setName("XbeeTotal"); // NOI18N

        GoodPackets.setText(resourceMap.getString("GoodPackets.text")); // NOI18N
        GoodPackets.setName("GoodPackets"); // NOI18N

        Xbeegood.setText(resourceMap.getString("Xbeegood.text")); // NOI18N
        Xbeegood.setName("Xbeegood"); // NOI18N

        org.jdesktop.layout.GroupLayout jPanel14Layout = new org.jdesktop.layout.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel14Layout.createSequentialGroup()
                .add(jPanel14Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel14Layout.createSequentialGroup()
                        .add(10, 10, 10)
                        .add(GoodPackets)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(Xbeegood)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(jLabel18)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(XbeeTotal))
                    .add(jPanel14Layout.createSequentialGroup()
                        .add(148, 148, 148)
                        .add(jLabel17)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(XbeePackets)))
                .addContainerGap(21, Short.MAX_VALUE))
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel14Layout.createSequentialGroup()
                .add(jPanel14Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(GoodPackets)
                    .add(Xbeegood)
                    .add(jLabel18)
                    .add(XbeeTotal))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jPanel14Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel17)
                    .add(XbeePackets))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab(resourceMap.getString("jPanel14.TabConstraints.tabTitle"), jPanel14); // NOI18N

        jPanel15.setName("jPanel15"); // NOI18N

        jLabel21.setText(resourceMap.getString("jLabel21.text")); // NOI18N
        jLabel21.setName("jLabel21"); // NOI18N

        BreathPacket.setText(resourceMap.getString("BreathPacket.text")); // NOI18N
        BreathPacket.setName("BreathPacket"); // NOI18N

        jLabel23.setText(resourceMap.getString("jLabel23.text")); // NOI18N
        jLabel23.setName("jLabel23"); // NOI18N

        BreathTotal.setText(resourceMap.getString("BreathTotal.text")); // NOI18N
        BreathTotal.setName("BreathTotal"); // NOI18N

        org.jdesktop.layout.GroupLayout jPanel15Layout = new org.jdesktop.layout.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel15Layout.createSequentialGroup()
                .addContainerGap()
                .add(jLabel21)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(BreathPacket)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 35, Short.MAX_VALUE)
                .add(jLabel23)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(BreathTotal)
                .add(30, 30, 30))
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel15Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel15Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel21)
                    .add(BreathPacket)
                    .add(jLabel23)
                    .add(BreathTotal))
                .addContainerGap(27, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab(resourceMap.getString("jPanel15.TabConstraints.tabTitle"), jPanel15); // NOI18N

        SignalStrength.setName("SignalStrength"); // NOI18N

        jLabel19.setText(resourceMap.getString("jLabel19.text")); // NOI18N
        jLabel19.setName("jLabel19"); // NOI18N

        jLabel25.setText(resourceMap.getString("jLabel25.text")); // NOI18N
        jLabel25.setName("jLabel25"); // NOI18N

        label10.setIcon(resourceMap.getIcon("label10.icon")); // NOI18N
        label10.setText(resourceMap.getString("label10.text")); // NOI18N
        label10.setName("label10"); // NOI18N

        label20.setIcon(resourceMap.getIcon("label20.icon")); // NOI18N
        label20.setText(resourceMap.getString("label20.text")); // NOI18N
        label20.setName("label20"); // NOI18N

        label30.setIcon(resourceMap.getIcon("label30.icon")); // NOI18N
        label30.setText(resourceMap.getString("label30.text")); // NOI18N
        label30.setName("label30"); // NOI18N

        label40.setIcon(resourceMap.getIcon("label40.icon")); // NOI18N
        label40.setText(resourceMap.getString("label40.text")); // NOI18N
        label40.setName("label40"); // NOI18N

        org.jdesktop.layout.GroupLayout SignalStrengthLayout = new org.jdesktop.layout.GroupLayout(SignalStrength);
        SignalStrength.setLayout(SignalStrengthLayout);
        SignalStrengthLayout.setHorizontalGroup(
            SignalStrengthLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(SignalStrengthLayout.createSequentialGroup()
                .add(SignalStrengthLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(SignalStrengthLayout.createSequentialGroup()
                        .add(468, 468, 468)
                        .add(jLabel25))
                    .add(SignalStrengthLayout.createSequentialGroup()
                        .add(122, 122, 122)
                        .add(jLabel19)
                        .add(29, 29, 29)
                        .add(label10, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 12, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(label20, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 14, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(label30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 12, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(label40, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 15, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        SignalStrengthLayout.linkSize(new java.awt.Component[] {label10, label20, label30, label40}, org.jdesktop.layout.GroupLayout.HORIZONTAL);

        SignalStrengthLayout.setVerticalGroup(
            SignalStrengthLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(SignalStrengthLayout.createSequentialGroup()
                .add(8, 8, 8)
                .add(SignalStrengthLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jLabel19, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 16, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, SignalStrengthLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                        .add(label40)
                        .add(org.jdesktop.layout.GroupLayout.TRAILING, label30)
                        .add(org.jdesktop.layout.GroupLayout.TRAILING, label20)
                        .add(org.jdesktop.layout.GroupLayout.TRAILING, label10)))
                .add(59, 59, 59)
                .add(jLabel25)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab(resourceMap.getString("SignalStrength.TabConstraints.tabTitle"), SignalStrength); // NOI18N

        jPanel16.setName("jPanel16"); // NOI18N

        jLabel22.setText(resourceMap.getString("jLabel22.text")); // NOI18N
        jLabel22.setName("jLabel22"); // NOI18N

        Batt.setText(resourceMap.getString("Batt.text")); // NOI18N
        Batt.setName("Batt"); // NOI18N

        org.jdesktop.layout.GroupLayout jPanel16Layout = new org.jdesktop.layout.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel16Layout.createSequentialGroup()
                .add(130, 130, 130)
                .add(jLabel22)
                .add(32, 32, 32)
                .add(Batt)
                .addContainerGap(156, Short.MAX_VALUE))
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel16Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel16Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel22)
                    .add(Batt))
                .addContainerGap(27, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab(resourceMap.getString("jPanel16.TabConstraints.tabTitle"), jPanel16); // NOI18N

        org.jdesktop.layout.GroupLayout SignalAnalysisLayout = new org.jdesktop.layout.GroupLayout(SignalAnalysis.getContentPane());
        SignalAnalysis.getContentPane().setLayout(SignalAnalysisLayout);
        SignalAnalysisLayout.setHorizontalGroup(
            SignalAnalysisLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(SignalAnalysisLayout.createSequentialGroup()
                .add(jTabbedPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 483, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        SignalAnalysisLayout.setVerticalGroup(
            SignalAnalysisLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(SignalAnalysisLayout.createSequentialGroup()
                .add(jTabbedPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 109, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        mainPanel.add(SignalAnalysis, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 280, 510, 150));

        Inbound.setClosable(true);
        Inbound.setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        Inbound.setIconifiable(true);
        Inbound.setMaximizable(true);
        Inbound.setResizable(true);
        Inbound.setTitle(resourceMap.getString("Inbound.title")); // NOI18N
        Inbound.setName("Inbound"); // NOI18N
        Inbound.setVisible(true);
        Inbound.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        ECGPane.setName("ECGPane"); // NOI18N

        jPanel2.setName("jPanel2"); // NOI18N

        LightSensorLabel.setFont(resourceMap.getFont("LightSensorLabel.font")); // NOI18N
        LightSensorLabel.setText(resourceMap.getString("LightSensorLabel.text")); // NOI18N
        LightSensorLabel.setName("LightSensorLabel"); // NOI18N

        LightValue.setFont(resourceMap.getFont("LightValue.font")); // NOI18N
        LightValue.setText(resourceMap.getString("LightValue.text")); // NOI18N
        LightValue.setName("LightValue"); // NOI18N

        ECGLabel.setFont(resourceMap.getFont("ECGLabel.font")); // NOI18N
        ECGLabel.setText(resourceMap.getString("ECGLabel.text")); // NOI18N
        ECGLabel.setName("ECGLabel"); // NOI18N

        ECGValue.setFont(resourceMap.getFont("SPO2Value.font")); // NOI18N
        ECGValue.setText(resourceMap.getString("ECGValue.text")); // NOI18N
        ECGValue.setName("ECGValue"); // NOI18N

        RESPLabel.setFont(resourceMap.getFont("RESPLabel.font")); // NOI18N
        RESPLabel.setText(resourceMap.getString("RESPLabel.text")); // NOI18N
        RESPLabel.setName("RESPLabel"); // NOI18N

        RESPValue.setFont(resourceMap.getFont("SPO2Value.font")); // NOI18N
        RESPValue.setText(resourceMap.getString("RESPValue.text")); // NOI18N
        RESPValue.setName("RESPValue"); // NOI18N

        SPO2Label.setFont(resourceMap.getFont("SPO2Label.font")); // NOI18N
        SPO2Label.setText(resourceMap.getString("SPO2Label.text")); // NOI18N
        SPO2Label.setName("SPO2Label"); // NOI18N

        SPO2Value.setFont(resourceMap.getFont("SPO2Value.font")); // NOI18N
        SPO2Value.setText(resourceMap.getString("SPO2Value.text")); // NOI18N
        SPO2Value.setName("SPO2Value"); // NOI18N

        PulseLabel.setFont(resourceMap.getFont("PulseLabel.font")); // NOI18N
        PulseLabel.setText(resourceMap.getString("PulseLabel.text")); // NOI18N
        PulseLabel.setName("PulseLabel"); // NOI18N

        PulseValue.setFont(resourceMap.getFont("SPO2Value.font")); // NOI18N
        PulseValue.setText(resourceMap.getString("PulseValue.text")); // NOI18N
        PulseValue.setName("PulseValue"); // NOI18N

        jLabel24.setFont(resourceMap.getFont("REDLED.font")); // NOI18N
        jLabel24.setText(resourceMap.getString("jLabel24.text")); // NOI18N
        jLabel24.setName("jLabel24"); // NOI18N

        jLabel26.setFont(resourceMap.getFont("REDLED.font")); // NOI18N
        jLabel26.setText(resourceMap.getString("jLabel26.text")); // NOI18N
        jLabel26.setName("jLabel26"); // NOI18N

        REDLED.setFont(resourceMap.getFont("REDLED.font")); // NOI18N
        REDLED.setText(resourceMap.getString("REDLED.text")); // NOI18N
        REDLED.setName("REDLED"); // NOI18N

        IRLED.setFont(resourceMap.getFont("IRLED.font")); // NOI18N
        IRLED.setText(resourceMap.getString("IRLED.text")); // NOI18N
        IRLED.setName("IRLED"); // NOI18N

        jLabel8.setFont(resourceMap.getFont("jLabel8.font")); // NOI18N
        jLabel8.setText(resourceMap.getString("jLabel8.text")); // NOI18N
        jLabel8.setName("jLabel8"); // NOI18N

        RESP.setFont(resourceMap.getFont("RESP.font")); // NOI18N
        RESP.setText(resourceMap.getString("RESP.text")); // NOI18N
        RESP.setName("RESP"); // NOI18N

        org.jdesktop.layout.GroupLayout jPanel2Layout = new org.jdesktop.layout.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .add(127, 127, 127)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(ECGLabel)
                    .add(RESPLabel)
                    .add(SPO2Label)
                    .add(PulseLabel)
                    .add(jLabel24)
                    .add(jLabel26)
                    .add(LightSensorLabel)
                    .add(jLabel8))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 70, Short.MAX_VALUE)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(RESP)
                    .add(IRLED)
                    .add(REDLED)
                    .add(SPO2Value)
                    .add(RESPValue)
                    .add(ECGValue)
                    .add(LightValue)
                    .add(PulseValue))
                .add(122, 122, 122))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .add(31, 31, 31)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel2Layout.createSequentialGroup()
                        .add(3, 3, 3)
                        .add(LightValue)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(ECGValue)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(RESPValue)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(SPO2Value)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(PulseValue))
                    .add(jPanel2Layout.createSequentialGroup()
                        .add(LightSensorLabel)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(ECGLabel)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(RESPLabel)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(SPO2Label)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(PulseLabel)))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel2Layout.createSequentialGroup()
                        .add(jLabel24)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jLabel26))
                    .add(jPanel2Layout.createSequentialGroup()
                        .add(REDLED)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(IRLED)))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(jLabel8)
                    .add(RESP))
                .addContainerGap(26, Short.MAX_VALUE))
        );

        ECGPane.addTab(resourceMap.getString("jPanel2.TabConstraints.tabTitle"), jPanel2); // NOI18N

        jPanel17.setName("jPanel17"); // NOI18N

        jLabel27.setText(resourceMap.getString("jLabel27.text")); // NOI18N
        jLabel27.setName("jLabel27"); // NOI18N

        IRSerialChart.setText(resourceMap.getString("IRSerialChart.text")); // NOI18N
        IRSerialChart.setName("IRSerialChart"); // NOI18N
        IRSerialChart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IRSerialChartActionPerformed(evt);
            }
        });

        jLabel28.setText(resourceMap.getString("jLabel28.text")); // NOI18N
        jLabel28.setName("jLabel28"); // NOI18N

        IRSQLChart.setText(resourceMap.getString("IRSQLChart.text")); // NOI18N
        IRSQLChart.setName("IRSQLChart"); // NOI18N
        IRSQLChart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IRSQLChartActionPerformed(evt);
            }
        });

        StartSPO2.setText(resourceMap.getString("StartSPO2.text")); // NOI18N
        StartSPO2.setName("StartSPO2"); // NOI18N
        StartSPO2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StartSPO2ActionPerformed(evt);
            }
        });

        StopSPO2.setText(resourceMap.getString("StopSPO2.text")); // NOI18N
        StopSPO2.setName("StopSPO2"); // NOI18N
        StopSPO2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StopSPO2ActionPerformed(evt);
            }
        });

        ResetSPO2.setText(resourceMap.getString("ResetSPO2.text")); // NOI18N
        ResetSPO2.setName("ResetSPO2"); // NOI18N
        ResetSPO2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ResetSPO2ActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel17Layout = new org.jdesktop.layout.GroupLayout(jPanel17);
        jPanel17.setLayout(jPanel17Layout);
        jPanel17Layout.setHorizontalGroup(
            jPanel17Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(IRSerialChart, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 509, Short.MAX_VALUE)
            .add(IRSQLChart, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 509, Short.MAX_VALUE)
            .add(jPanel17Layout.createSequentialGroup()
                .add(180, 180, 180)
                .add(jLabel28)
                .addContainerGap(183, Short.MAX_VALUE))
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel17Layout.createSequentialGroup()
                .addContainerGap(160, Short.MAX_VALUE)
                .add(jLabel27)
                .add(156, 156, 156))
            .add(jPanel17Layout.createSequentialGroup()
                .add(26, 26, 26)
                .add(StartSPO2)
                .add(30, 30, 30)
                .add(StopSPO2)
                .add(30, 30, 30)
                .add(ResetSPO2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 132, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(32, Short.MAX_VALUE))
        );
        jPanel17Layout.setVerticalGroup(
            jPanel17Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel17Layout.createSequentialGroup()
                .addContainerGap()
                .add(jLabel27)
                .add(5, 5, 5)
                .add(IRSerialChart, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 45, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(13, 13, 13)
                .add(jLabel28)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(IRSQLChart, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 44, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 40, Short.MAX_VALUE)
                .add(jPanel17Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(ResetSPO2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 61, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(StartSPO2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 61, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(StopSPO2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 61, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        ECGPane.addTab(resourceMap.getString("jPanel17.TabConstraints.tabTitle"), jPanel17); // NOI18N

        jPanel10.setName("jPanel10"); // NOI18N

        jLabel10.setText(resourceMap.getString("jLabel10.text")); // NOI18N
        jLabel10.setName("jLabel10"); // NOI18N

        ECGSerialChart.setText(resourceMap.getString("ECGSerialChart.text")); // NOI18N
        ECGSerialChart.setName("ECGSerialChart"); // NOI18N
        ECGSerialChart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ECGSerialChartActionPerformed(evt);
            }
        });

        jLabel11.setText(resourceMap.getString("jLabel11.text")); // NOI18N
        jLabel11.setName("jLabel11"); // NOI18N

        ECGSQLChart.setText(resourceMap.getString("ECGSQLChart.text")); // NOI18N
        ECGSQLChart.setName("ECGSQLChart"); // NOI18N
        ECGSQLChart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ECGSQLChartActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel10Layout = new org.jdesktop.layout.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel10Layout.createSequentialGroup()
                .addContainerGap(185, Short.MAX_VALUE)
                .add(jLabel11)
                .add(178, 178, 178))
            .add(ECGSQLChart, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 509, Short.MAX_VALUE)
            .add(ECGSerialChart, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 509, Short.MAX_VALUE)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel10Layout.createSequentialGroup()
                .addContainerGap(159, Short.MAX_VALUE)
                .add(jLabel10)
                .add(157, 157, 157))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .add(jLabel10)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(ECGSerialChart, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 46, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jLabel11)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(ECGSQLChart, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 45, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(116, Short.MAX_VALUE))
        );

        ECGPane.addTab(resourceMap.getString("jPanel10.TabConstraints.tabTitle"), jPanel10); // NOI18N

        jPanel9.setName("jPanel9"); // NOI18N

        jLabel12.setText(resourceMap.getString("jLabel12.text")); // NOI18N
        jLabel12.setName("jLabel12"); // NOI18N

        OXISerialChart1.setText(resourceMap.getString("OXISerialChart1.text")); // NOI18N
        OXISerialChart1.setName("OXISerialChart1"); // NOI18N
        OXISerialChart1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OXISerialChart1ActionPerformed(evt);
            }
        });

        jLabel13.setText(resourceMap.getString("jLabel13.text")); // NOI18N
        jLabel13.setName("jLabel13"); // NOI18N

        OXISQLChart1.setText(resourceMap.getString("OXISQLChart1.text")); // NOI18N
        OXISQLChart1.setName("OXISQLChart1"); // NOI18N
        OXISQLChart1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OXISQLChart1ActionPerformed(evt);
            }
        });

        jLabel29.setText(resourceMap.getString("jLabel29.text")); // NOI18N
        jLabel29.setName("jLabel29"); // NOI18N

        ResetPulse.setText(resourceMap.getString("ResetPulse.text")); // NOI18N
        ResetPulse.setName("ResetPulse"); // NOI18N
        ResetPulse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ResetPulseActionPerformed(evt);
            }
        });

        StartPulse.setText(resourceMap.getString("StartPulse.text")); // NOI18N
        StartPulse.setName("StartPulse"); // NOI18N
        StartPulse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StartPulseActionPerformed(evt);
            }
        });

        StopPulse.setText(resourceMap.getString("StopPulse.text")); // NOI18N
        StopPulse.setName("StopPulse"); // NOI18N
        StopPulse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StopPulseActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel9Layout = new org.jdesktop.layout.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(OXISQLChart1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 509, Short.MAX_VALUE)
            .add(jPanel9Layout.createSequentialGroup()
                .add(180, 180, 180)
                .add(jLabel13)
                .addContainerGap(183, Short.MAX_VALUE))
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel9Layout.createSequentialGroup()
                .addContainerGap(160, Short.MAX_VALUE)
                .add(jLabel12)
                .add(156, 156, 156))
            .add(jPanel9Layout.createSequentialGroup()
                .add(28, 28, 28)
                .add(StartPulse)
                .add(30, 30, 30)
                .add(StopPulse)
                .add(30, 30, 30)
                .add(ResetPulse, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 132, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jLabel29)
                .addContainerGap(21, Short.MAX_VALUE))
            .add(OXISerialChart1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 509, Short.MAX_VALUE)
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .add(jLabel12)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(OXISerialChart1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 45, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jLabel13)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(OXISQLChart1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 44, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 40, Short.MAX_VALUE)
                .add(jPanel9Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(jPanel9Layout.createSequentialGroup()
                        .add(jLabel29)
                        .add(65, 65, 65))
                    .add(jPanel9Layout.createSequentialGroup()
                        .add(jPanel9Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(ResetPulse, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 61, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(StartPulse, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 61, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(StopPulse, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 61, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap())))
        );

        ECGPane.addTab(resourceMap.getString("jPanel9.TabConstraints.tabTitle"), jPanel9); // NOI18N

        jPanel11.setName("jPanel11"); // NOI18N

        RESPSql.setText(resourceMap.getString("RESPSql.text")); // NOI18N
        RESPSql.setName("RESPSql"); // NOI18N
        RESPSql.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RESPSqlActionPerformed(evt);
            }
        });

        jLabel30.setText(resourceMap.getString("jLabel30.text")); // NOI18N
        jLabel30.setName("jLabel30"); // NOI18N

        RESPSerial.setText(resourceMap.getString("RESPSerial.text")); // NOI18N
        RESPSerial.setName("RESPSerial"); // NOI18N
        RESPSerial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RESPSerialActionPerformed(evt);
            }
        });

        jLabel31.setText(resourceMap.getString("jLabel31.text")); // NOI18N
        jLabel31.setName("jLabel31"); // NOI18N

        org.jdesktop.layout.GroupLayout jPanel11Layout = new org.jdesktop.layout.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel11Layout.createSequentialGroup()
                .add(jPanel11Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(RESPSerial, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 509, Short.MAX_VALUE)
                    .add(RESPSql, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 509, Short.MAX_VALUE)
                    .add(jPanel11Layout.createSequentialGroup()
                        .addContainerGap()
                        .add(jPanel11Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jPanel11Layout.createSequentialGroup()
                                .add(180, 180, 180)
                                .add(jLabel30)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 183, Short.MAX_VALUE))
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel11Layout.createSequentialGroup()
                                .add(jLabel31)
                                .add(156, 156, 156)))))
                .addContainerGap())
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel11Layout.createSequentialGroup()
                .add(34, 34, 34)
                .add(jLabel31)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(RESPSerial, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 53, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jLabel30)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(RESPSql, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 56, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(82, Short.MAX_VALUE))
        );

        ECGPane.addTab(resourceMap.getString("jPanel11.TabConstraints.tabTitle"), jPanel11); // NOI18N

        jPanel12.setName("jPanel12"); // NOI18N

        GPS.setText(resourceMap.getString("GPS.text")); // NOI18N
        GPS.setName("GPS"); // NOI18N
        GPS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GPSActionPerformed(evt);
            }
        });

        jLabel9.setText(resourceMap.getString("jLabel9.text")); // NOI18N
        jLabel9.setName("jLabel9"); // NOI18N

        Socket.setText(resourceMap.getString("Socket.text")); // NOI18N
        Socket.setName("Socket"); // NOI18N

        ConnectSocket.setText(resourceMap.getString("ConnectSocket.text")); // NOI18N
        ConnectSocket.setName("ConnectSocket"); // NOI18N
        ConnectSocket.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ConnectSocketActionPerformed(evt);
            }
        });

        ConnectSocket1.setText(resourceMap.getString("ConnectSocket1.text")); // NOI18N
        ConnectSocket1.setName("ConnectSocket1"); // NOI18N
        ConnectSocket1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ConnectSocket1ActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel12Layout = new org.jdesktop.layout.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel12Layout.createSequentialGroup()
                .add(jPanel12Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel12Layout.createSequentialGroup()
                        .add(32, 32, 32)
                        .add(jLabel9)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(Socket))
                    .add(jPanel12Layout.createSequentialGroup()
                        .add(83, 83, 83)
                        .add(ConnectSocket)
                        .add(47, 47, 47)
                        .add(ConnectSocket1))
                    .add(jPanel12Layout.createSequentialGroup()
                        .addContainerGap()
                        .add(GPS, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 475, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel12Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(jLabel9)
                    .add(Socket))
                .add(18, 18, 18)
                .add(jPanel12Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(ConnectSocket)
                    .add(ConnectSocket1))
                .add(8, 8, 8)
                .add(GPS, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 144, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(49, Short.MAX_VALUE))
        );

        ECGPane.addTab(resourceMap.getString("jPanel12.TabConstraints.tabTitle"), jPanel12); // NOI18N

        jPanel13.setName("jPanel13"); // NOI18N

        jLabel14.setText(resourceMap.getString("jLabel14.text")); // NOI18N
        jLabel14.setName("jLabel14"); // NOI18N

        LightSerialChart2.setText(resourceMap.getString("LightSerialChart2.text")); // NOI18N
        LightSerialChart2.setName("LightSerialChart2"); // NOI18N
        LightSerialChart2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LightSerialChart2ActionPerformed(evt);
            }
        });

        jLabel15.setText(resourceMap.getString("jLabel15.text")); // NOI18N
        jLabel15.setName("jLabel15"); // NOI18N

        LightSQLChart2.setText(resourceMap.getString("LightSQLChart2.text")); // NOI18N
        LightSQLChart2.setName("LightSQLChart2"); // NOI18N
        LightSQLChart2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LightSQLChart2ActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel13Layout = new org.jdesktop.layout.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(LightSerialChart2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 509, Short.MAX_VALUE)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel13Layout.createSequentialGroup()
                .addContainerGap(159, Short.MAX_VALUE)
                .add(jLabel14)
                .add(157, 157, 157))
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel13Layout.createSequentialGroup()
                .addContainerGap(184, Short.MAX_VALUE)
                .add(jLabel15)
                .add(179, 179, 179))
            .add(LightSQLChart2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 509, Short.MAX_VALUE)
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .add(jLabel14)
                .add(9, 9, 9)
                .add(LightSerialChart2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 44, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jLabel15)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(LightSQLChart2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 46, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(115, Short.MAX_VALUE))
        );

        ECGPane.addTab(resourceMap.getString("jPanel13.TabConstraints.tabTitle"), jPanel13); // NOI18N

        jPanel3.setName("jPanel3"); // NOI18N

        jScrollPane3.setName("jScrollPane3"); // NOI18N

        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable3.setName("jTable3"); // NOI18N
        jScrollPane3.setViewportView(jTable3);

        org.jdesktop.layout.GroupLayout jPanel3Layout = new org.jdesktop.layout.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .add(jScrollPane3, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 469, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .add(jScrollPane3, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 244, Short.MAX_VALUE)
                .addContainerGap())
        );

        ECGPane.addTab(resourceMap.getString("jPanel3.TabConstraints.tabTitle"), jPanel3); // NOI18N

        Inbound.getContentPane().add(ECGPane, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 530, 330));

        jMenuBar3.setName("jMenuBar3"); // NOI18N

        jMenu5.setText(resourceMap.getString("jMenu5.text")); // NOI18N
        jMenu5.setName("jMenu5"); // NOI18N

        EXITINBOUND.setText(resourceMap.getString("EXITINBOUND.text")); // NOI18N
        EXITINBOUND.setName("EXITINBOUND"); // NOI18N
        EXITINBOUND.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EXITINBOUNDActionPerformed(evt);
            }
        });
        jMenu5.add(EXITINBOUND);

        jMenuBar3.add(jMenu5);

        Inbound.setJMenuBar(jMenuBar3);

        mainPanel.add(Inbound, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 20, 570, 410));

        menuBar.setName("menuBar"); // NOI18N

        fileMenu.setText(resourceMap.getString("fileMenu.text")); // NOI18N
        fileMenu.setName("fileMenu"); // NOI18N

        Connect.setText(resourceMap.getString("Connect.text")); // NOI18N
        Connect.setName("Connect"); // NOI18N
        Connect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ConnectActionPerformed(evt);
            }
        });
        fileMenu.add(Connect);

        Disconnect.setText(resourceMap.getString("Disconnect.text")); // NOI18N
        Disconnect.setName("Disconnect"); // NOI18N
        Disconnect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DisconnectActionPerformed(evt);
            }
        });
        fileMenu.add(Disconnect);

        ConnectToDB.setText(resourceMap.getString("ConnectToDB.text")); // NOI18N
        ConnectToDB.setName("ConnectToDB"); // NOI18N
        ConnectToDB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ConnectToDBActionPerformed(evt);
            }
        });
        fileMenu.add(ConnectToDB);

        CloseDB.setText(resourceMap.getString("CloseDB.text")); // NOI18N
        CloseDB.setName("CloseDB"); // NOI18N
        CloseDB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CloseDBActionPerformed(evt);
            }
        });
        fileMenu.add(CloseDB);

        javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance(ecgjava2.ECGJAVa2App.class).getContext().getActionMap(ECGJAVa2View.class, this);
        exitMenuItem.setAction(actionMap.get("quit")); // NOI18N
        exitMenuItem.setName("exitMenuItem"); // NOI18N
        exitMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(exitMenuItem);

        menuBar.add(fileMenu);

        jMenu9.setText(resourceMap.getString("jMenu9.text")); // NOI18N
        jMenu9.setName("jMenu9"); // NOI18N

        ShowConnected.setText(resourceMap.getString("ShowConnected.text")); // NOI18N
        ShowConnected.setName("ShowConnected"); // NOI18N
        ShowConnected.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ShowConnectedActionPerformed(evt);
            }
        });
        jMenu9.add(ShowConnected);

        ShowTemp.setText(resourceMap.getString("ShowTemp.text")); // NOI18N
        ShowTemp.setName("ShowTemp"); // NOI18N
        ShowTemp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ShowTempActionPerformed(evt);
            }
        });
        jMenu9.add(ShowTemp);

        ShowInbound.setText(resourceMap.getString("ShowInbound.text")); // NOI18N
        ShowInbound.setName("ShowInbound"); // NOI18N
        ShowInbound.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ShowInboundActionPerformed(evt);
            }
        });
        jMenu9.add(ShowInbound);

        ShowGen.setText(resourceMap.getString("ShowGen.text")); // NOI18N
        ShowGen.setName("ShowGen"); // NOI18N
        ShowGen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ShowGenActionPerformed(evt);
            }
        });
        jMenu9.add(ShowGen);

        ShowECG.setText(resourceMap.getString("ShowECG.text")); // NOI18N
        ShowECG.setName("ShowECG"); // NOI18N
        ShowECG.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ShowECGActionPerformed(evt);
            }
        });
        jMenu9.add(ShowECG);

        ShowSignal.setText(resourceMap.getString("ShowSignal.text")); // NOI18N
        ShowSignal.setName("ShowSignal"); // NOI18N
        ShowSignal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ShowSignalActionPerformed(evt);
            }
        });
        jMenu9.add(ShowSignal);

        ShowALL.setText(resourceMap.getString("ShowALL.text")); // NOI18N
        ShowALL.setName("ShowALL"); // NOI18N
        ShowALL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ShowALLActionPerformed(evt);
            }
        });
        jMenu9.add(ShowALL);

        menuBar.add(jMenu9);

        jMenu2.setText(resourceMap.getString("jMenu2.text")); // NOI18N
        jMenu2.setName("jMenu2"); // NOI18N

        jMenuItem4.setText(resourceMap.getString("jMenuItem4.text")); // NOI18N
        jMenuItem4.setName("jMenuItem4"); // NOI18N
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem4);

        jMenuItem3.setText(resourceMap.getString("jMenuItem3.text")); // NOI18N
        jMenuItem3.setName("jMenuItem3"); // NOI18N
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem3);

        Dialog_box.setText(resourceMap.getString("Dialog_box.text")); // NOI18N
        Dialog_box.setName("Dialog_box"); // NOI18N
        Dialog_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Dialog_boxActionPerformed(evt);
            }
        });
        jMenu2.add(Dialog_box);

        menuBar.add(jMenu2);

        jMenu6.setText(resourceMap.getString("jMenu6.text")); // NOI18N

        jMenuItem10.setText(resourceMap.getString("jMenuItem10.text")); // NOI18N
        jMenuItem10.setName("jMenuItem10"); // NOI18N
        jMenuItem10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem10ActionPerformed(evt);
            }
        });
        jMenu6.add(jMenuItem10);

        menuBar.add(jMenu6);

        helpMenu.setText(resourceMap.getString("helpMenu.text")); // NOI18N
        helpMenu.setName("helpMenu"); // NOI18N

        aboutMenuItem.setAction(actionMap.get("showAboutBox")); // NOI18N
        aboutMenuItem.setName("aboutMenuItem"); // NOI18N
        helpMenu.add(aboutMenuItem);

        menuBar.add(helpMenu);

        Main.setName("Main"); // NOI18N

        org.jdesktop.layout.GroupLayout MainLayout = new org.jdesktop.layout.GroupLayout(Main.getContentPane());
        Main.getContentPane().setLayout(MainLayout);
        MainLayout.setHorizontalGroup(
            MainLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 400, Short.MAX_VALUE)
        );
        MainLayout.setVerticalGroup(
            MainLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 300, Short.MAX_VALUE)
        );

        jLabel20.setText(resourceMap.getString("jLabel20.text")); // NOI18N
        jLabel20.setName("jLabel20"); // NOI18N

        setComponent(mainPanel);
        setMenuBar(menuBar);
    }// </editor-fold>//GEN-END:initComponents

    //disconnect serial
    
    //connect serial
    
    private void ConnectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ConnectActionPerformed

       Thread Comm = null;
            try {
            try {
                Comm = new CommPortOpen(null);
            } catch (IOException ex) {
                Logger.getLogger(ECGJAVa2View.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(null, "Could not connect to Serial", "Error", JOptionPane.ERROR_MESSAGE);
            }
            } catch (NoSuchPortException ex) {
                Logger.getLogger(ECGJAVa2View.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(null, "Could not connect to Serial", "Error", JOptionPane.ERROR_MESSAGE);
            } catch (PortInUseException ex) {
                Logger.getLogger(ECGJAVa2View.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(null, "Could not connect to Serial", "Error", JOptionPane.ERROR_MESSAGE);
            } catch (UnsupportedCommOperationException ex) {
                Logger.getLogger(ECGJAVa2View.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(null, "Could not connect to Serial", "Error", JOptionPane.ERROR_MESSAGE);
            }
       Comm.start();
       InitialTime = System.currentTimeMillis();
        
        try {
            LogFiles.WriteLogFiles.main(null);
        } catch (IOException ex) {
            Logger.getLogger(ECGJAVa2View.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "Error initializing files", "Error", JOptionPane.ERROR_MESSAGE);
        }
       System.out.println(CommPortOpen.getConnected());
        if (CommPortOpen.getConnected()){
            Serial.setText(CommPortOpen.getPortName());
            Serial.repaint();
        }
        else{
            Serial.setText("<Default>");
        }
    }//GEN-LAST:event_ConnectActionPerformed

    //get dialog box
    
    private void Dialog_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Dialog_boxActionPerformed

        Dialog = new Dialog_box();
        Dialog.setVisible(true);
        Dialogconnected = true;
    }//GEN-LAST:event_Dialog_boxActionPerformed

    private void ShowConnectedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ShowConnectedActionPerformed

        //Connected.show();
        Connected.setVisible(true);
    }//GEN-LAST:event_ShowConnectedActionPerformed

    private void ShowTempActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ShowTempActionPerformed

        //Temperature.show();
        Temperature.setVisible(true);
    }//GEN-LAST:event_ShowTempActionPerformed

    private void ShowInboundActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ShowInboundActionPerformed

        //Inbound.show();
        Inbound.setVisible(true);
    }//GEN-LAST:event_ShowInboundActionPerformed

    private void ShowGenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ShowGenActionPerformed

        //GenDAta.show();
        GenDAta.setVisible(true);
    }//GEN-LAST:event_ShowGenActionPerformed

    private void ShowECGActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ShowECGActionPerformed

        //ECG.show();
        ECGContainer.setVisible(true);

    }//GEN-LAST:event_ShowECGActionPerformed

    private void ShowALLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ShowALLActionPerformed

        //Connected.show();
        Connected.setVisible(true);
        //Temperature.show();
        Temperature.setVisible(true);
        //Inbound.show();
        Inbound.setVisible(true);
        //GenDAta.show();
        GenDAta.setVisible(true);
        //ECG.show();
        ECGContainer.setVisible(true);
        SignalAnalysis.setVisible(true);

    }//GEN-LAST:event_ShowALLActionPerformed

    private void EXITGENActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EXITGENActionPerformed
        GenDAta.setVisible(false);
    }//GEN-LAST:event_EXITGENActionPerformed

    private void EXITTEMPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EXITTEMPActionPerformed
        Temperature.setVisible(false);
    }//GEN-LAST:event_EXITTEMPActionPerformed

    private void EXITINBOUNDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EXITINBOUNDActionPerformed
        Inbound.setVisible(false);
    }//GEN-LAST:event_EXITINBOUNDActionPerformed

    private void ConnectToDBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ConnectToDBActionPerformed
        try {
            // Connect to DB
            SQL.connectArduinoData();
            SQL.connectHistory();
            SQL.connectTrends();
            SQL.connectGPS();
        } catch (IOException ex) {
            Logger.getLogger(ECGJAVa2View.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "Cannot Connect to DB", "Error", JOptionPane.ERROR_MESSAGE);
        } catch (InstantiationException ex) {
            Logger.getLogger(ECGJAVa2View.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "Cannot Connect to DB", "Error", JOptionPane.ERROR_MESSAGE);
        } catch (IllegalAccessException ex) {
            Logger.getLogger(ECGJAVa2View.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "Cannot Connect to DB", "Error", JOptionPane.ERROR_MESSAGE);
        } catch (SQLException ex) {
            Logger.getLogger(ECGJAVa2View.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "Cannot Connect to DB", "Error", JOptionPane.ERROR_MESSAGE);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(ECGJAVa2View.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "Cannot Connect to DB", "Error", JOptionPane.ERROR_MESSAGE);
        }

        if (SQL.getConnectedSQL()){
            ConnectDB.setText("Connected to DB");
            ConnectDB.repaint();
        }

    }//GEN-LAST:event_ConnectToDBActionPerformed

    private void BreathChartSQLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BreathChartSQLActionPerformed
        

        if (!CommPortOpenBreath.getConnected()){
            JOptionPane.showMessageDialog(null, "Not Connected to SQL", "Error", JOptionPane.ERROR_MESSAGE);
        }
        else{
            chart.ThreadedChartBreathper.main(null);
        }

        // Get Trend Graph
        //SQL Based
    }//GEN-LAST:event_BreathChartSQLActionPerformed

    private void TempSerialChartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TempSerialChartActionPerformed

        if (!CommPortOpen.getConnected()){
            JOptionPane.showMessageDialog(null, "Not Connected to Serial", "Error", JOptionPane.ERROR_MESSAGE);
        }
        else{
            chart.ThreadedChartTemp.main(null);
        }
        // Get Real Time Graph
        // Serial Based
    }//GEN-LAST:event_TempSerialChartActionPerformed

    private void TempSQLChartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TempSQLChartActionPerformed

        JOptionPane.showMessageDialog(null, "Not Supported Yet", "Error", JOptionPane.ERROR_MESSAGE);


        if (!SQL.getConnectedSQL()){
            JOptionPane.showMessageDialog(null, "Not Connected to Database", "Error", JOptionPane.ERROR_MESSAGE);
        }

        // Get Trend Graph
        //SQL Based
    }//GEN-LAST:event_TempSQLChartActionPerformed

    private void ConnectBoardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ConnectBoardActionPerformed

        Thread Comm = null;
            try {
            try {
                Comm = new CommPortOpenBreath(null);
            } catch (IOException ex) {
                Logger.getLogger(ECGJAVa2View.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(null, "Could not connect to Serial", "Error", JOptionPane.ERROR_MESSAGE);
            }
            } catch (NoSuchPortException ex) {
                Logger.getLogger(ECGJAVa2View.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(null, "Could not connect to Serial", "Error", JOptionPane.ERROR_MESSAGE);

            } catch (PortInUseException ex) {
                Logger.getLogger(ECGJAVa2View.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(null, "Could not connect to Serial", "Error", JOptionPane.ERROR_MESSAGE);

            } catch (UnsupportedCommOperationException ex) {
                Logger.getLogger(ECGJAVa2View.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(null, "Could not connect to Serial", "Error", JOptionPane.ERROR_MESSAGE);

            }
       Comm.start();

        if (CommPortOpenBreath.getConnected()){
            ConectBreathSerial.setText(CommPortOpenBreath.getPortName());
            ConectBreathSerial.repaint();
        }
        else{
            ConectBreathSerial.setText("<Default>");
        }

    }//GEN-LAST:event_ConnectBoardActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed

        if (!CommPortOpen.getConnected()){
            JOptionPane.showMessageDialog(null, "Not Connected to Serial", "Error", JOptionPane.ERROR_MESSAGE);
        }
        else{
            chart.ThreadedChartECGembed.main(null);
            ECGContainer.repaint();
            ECGContainer.updateUI();
        }

    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed

        ECGContainer.setVisible(false);

    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        FileChooser.main(null);
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void BreathSerialChart1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BreathSerialChart1ActionPerformed

        if (!CommPortOpenBreath.getConnected()){
            JOptionPane.showMessageDialog(null, "Not Connected to Serial", "Error", JOptionPane.ERROR_MESSAGE);
        }
        else{
            chart.ThreadedChartBreathvalue.main(null);
        }
    }//GEN-LAST:event_BreathSerialChart1ActionPerformed

    private void exitMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitMenuItemActionPerformed

         Disconnect_Close();
    }//GEN-LAST:event_exitMenuItemActionPerformed

    private void jMenuItem10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem10ActionPerformed

    if (CommPortOpen.getConnected()){
        if(CommPortOpen.thePortID.getName().startsWith("/dev/tty.usbmodem") || CommPortOpen.thePortID.getName().startsWith("/dev/cu.usbmodem")){
            JOptionPane.showMessageDialog(null, "Not Connected to Wireless Serial Port", "Error", JOptionPane.ERROR_MESSAGE);
        }
        else if (CommPortOpen.thePortID.getName().startsWith("/dev/tty.usbserial")) {
            SignalAnalysis Var = new SignalAnalysis();
            Var.run();
            SignalAnalysisGuard = true;
        }
    }
    else{
        JOptionPane.showMessageDialog(null, "Not Connected", "Error", JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_jMenuItem10ActionPerformed

    private void ShowSignalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ShowSignalActionPerformed
        if (CommPortOpen.getConnected()){
            SignalAnalysis.setVisible(true);
        }
        else {
            JOptionPane.showMessageDialog(null, "Not Connected to Serial", "Error", JOptionPane.ERROR_MESSAGE);

        }
    }//GEN-LAST:event_ShowSignalActionPerformed

    private void LightSQLChart2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LightSQLChart2ActionPerformed

        JOptionPane.showMessageDialog(null, "Not Supported Yet", "Error", JOptionPane.ERROR_MESSAGE);


        if (!SQL.getConnectedSQL()){
            JOptionPane.showMessageDialog(null, "Not Connected to Database", "Error", JOptionPane.ERROR_MESSAGE);
        }

        // Get Trend Graph
        //SQL Based
}//GEN-LAST:event_LightSQLChart2ActionPerformed

    private void LightSerialChart2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LightSerialChart2ActionPerformed

        if (!CommPortOpen.getConnected()){
            JOptionPane.showMessageDialog(null, "Not Connected to Serial", "Error", JOptionPane.ERROR_MESSAGE);
        } else{
            chart.ThreadedChartLight.main(null);
        }
}//GEN-LAST:event_LightSerialChart2ActionPerformed

    private void ResetSPO2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ResetSPO2ActionPerformed
        getSPO2.reset();
}//GEN-LAST:event_ResetSPO2ActionPerformed

    private void StopSPO2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StopSPO2ActionPerformed
        getSPO2.setSPO2Guard(false);
}//GEN-LAST:event_StopSPO2ActionPerformed

    private void StartSPO2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StartSPO2ActionPerformed
        getSPO2.setSPO2Guard(true);
    }//GEN-LAST:event_StartSPO2ActionPerformed

    private void IRSQLChartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IRSQLChartActionPerformed

        JOptionPane.showMessageDialog(null, "Not Supported Yet", "Error", JOptionPane.ERROR_MESSAGE);


        if (!SQL.getConnectedSQL()){
            JOptionPane.showMessageDialog(null, "Not Connected to Database", "Error", JOptionPane.ERROR_MESSAGE);
        }

        // Get Trend Graph
        //SQL Based
}//GEN-LAST:event_IRSQLChartActionPerformed

    private void IRSerialChartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IRSerialChartActionPerformed

        if (!CommPortOpen.getConnected()){
            JOptionPane.showMessageDialog(null, "Not Connected to Serial", "Error", JOptionPane.ERROR_MESSAGE);
        } else{
            chart.ThreadedChartIR.main(null);
        }
}//GEN-LAST:event_IRSerialChartActionPerformed

    private void StopPulseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StopPulseActionPerformed
        getBPM.setBPMGuard(false);
}//GEN-LAST:event_StopPulseActionPerformed

    private void StartPulseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StartPulseActionPerformed
        getBPM.setBPMGuard(true);
}//GEN-LAST:event_StartPulseActionPerformed

    private void ResetPulseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ResetPulseActionPerformed
        getBPM.reset();
}//GEN-LAST:event_ResetPulseActionPerformed

    private void OXISQLChart1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OXISQLChart1ActionPerformed

        JOptionPane.showMessageDialog(null, "Not Supported Yet", "Error", JOptionPane.ERROR_MESSAGE);


        if (!SQL.getConnectedSQL()){
            JOptionPane.showMessageDialog(null, "Not Connected to Database", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_OXISQLChart1ActionPerformed

    private void OXISerialChart1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OXISerialChart1ActionPerformed

        if (!CommPortOpen.getConnected()){
            JOptionPane.showMessageDialog(null, "Not Connected to Serial", "Error", JOptionPane.ERROR_MESSAGE);
        } else{
            chart.ThreadedChartOXI.main(null);
        }
}//GEN-LAST:event_OXISerialChart1ActionPerformed

    private void ECGSQLChartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ECGSQLChartActionPerformed

        JOptionPane.showMessageDialog(null, "Not Supported Yet", "Error", JOptionPane.ERROR_MESSAGE);


        if (!SQL.getConnectedSQL()){
            JOptionPane.showMessageDialog(null, "Not Connected to Database", "Error", JOptionPane.ERROR_MESSAGE);
        }

        // Get Trend Graph
        //SQL Based
}//GEN-LAST:event_ECGSQLChartActionPerformed

    private void ECGSerialChartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ECGSerialChartActionPerformed


        if (!CommPortOpen.getConnected()){
            JOptionPane.showMessageDialog(null, "Not Connected to Serial", "Error", JOptionPane.ERROR_MESSAGE);
        } else{
            chart.ThreadedChartECG.main(null);
        }

        // Get Real Time Graph
        // Serial Based
}//GEN-LAST:event_ECGSerialChartActionPerformed

    private void RESPSqlActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RESPSqlActionPerformed

        JOptionPane.showMessageDialog(null, "Not Supported Yet", "Error", JOptionPane.ERROR_MESSAGE);


        if (!SQL.getConnectedSQL()){
            JOptionPane.showMessageDialog(null, "Not Connected to Database", "Error", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_RESPSqlActionPerformed

    private void RESPSerialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RESPSerialActionPerformed

        if (!CommPortOpen.getConnected()){
            JOptionPane.showMessageDialog(null, "Not Connected to Serial", "Error", JOptionPane.ERROR_MESSAGE);
        } else{
            chart.ThreadedChartRESP.main(null);
        }
    }//GEN-LAST:event_RESPSerialActionPerformed

    private void GPSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GPSActionPerformed
        
        if (socketConnected){
            try {
                Process child = Runtime.getRuntime().exec("java -jar /Users/francispapineau/Desktop/ECGJAVa2GOOD/gpsylon_bin-0.5.3/gpsylon-0.5.3.jar");
            } catch (IOException ex) {
                Logger.getLogger(ECGJAVa2View.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        else{
            JOptionPane.showMessageDialog(null, "Not Connected to Socket", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_GPSActionPerformed

private void ConnectSocketActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ConnectSocketActionPerformed

        Thread Server = new GPSComm();
        Server.start();

        socketConnected = true;
        Socket.setText("Connected To -> localhost:4444");
    
}//GEN-LAST:event_ConnectSocketActionPerformed

private void ConnectSocket1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ConnectSocket1ActionPerformed
  
    if (socketConnected){
            Socket.setText("<Default>");
            socketConnected = false;
            try {
                GPSComm.closeSocket();
                
            } catch (IOException ex) {
                Logger.getLogger(ECGJAVa2View.class.getName()).log(Level.SEVERE, null, ex);
            }
    }
}//GEN-LAST:event_ConnectSocket1ActionPerformed

private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        GPSDialog = new Dialog_boxGPS();
        GPSDialog.setVisible(true);
        DialogGPSconnected = true;
}//GEN-LAST:event_jMenuItem3ActionPerformed

private void CloseDBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CloseDBActionPerformed
        try {
                SQL.disconnectSQL();
        } catch (SQLException ex) {
            Logger.getLogger(ECGJAVa2View.class.getName()).log(Level.SEVERE, null, ex);
        }
}//GEN-LAST:event_CloseDBActionPerformed

private void DisconnectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DisconnectActionPerformed
        
        Serial.setText("<Default>");
        Serial.repaint();
        
        try {
            CommPortOpen.closeConnection();
        } catch (IOException ex) {
            Logger.getLogger(ECGJAVa2View.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            WriteLogFiles.closeWriteFile();
        } catch (IOException ex) {
            Logger.getLogger(ECGJAVa2View.class.getName()).log(Level.SEVERE, null, ex);
        }
}//GEN-LAST:event_DisconnectActionPerformed

    private void Disconnect_Close(){

        if(CommPortOpen.getConnected()){
            CommPortOpen.setConnectGuard(false);
        }
        System.exit(0);
    }
    
    static boolean getDialogConnected(){
        return Dialogconnected;
    }

    static boolean getSocketConnected(){
        return socketConnected;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel BaseLabel;
    public static javax.swing.JLabel BaseTempValue;
    public static javax.swing.JLabel Batt;
    private javax.swing.JButton BreathChartSQL;
    public static javax.swing.JLabel BreathPacket;
    public static javax.swing.JLabel BreathPer;
    private javax.swing.JButton BreathSerialChart1;
    public static javax.swing.JLabel BreathTotal;
    public static javax.swing.JLabel BreathVal;
    private javax.swing.JMenuItem CloseDB;
    public static javax.swing.JLabel ConectBreathSerial;
    private javax.swing.JMenuItem Connect;
    private javax.swing.JMenuItem ConnectBoard;
    private javax.swing.JMenu ConnectBreath;
    public static javax.swing.JLabel ConnectDB;
    private javax.swing.JButton ConnectSocket;
    private javax.swing.JButton ConnectSocket1;
    private javax.swing.JMenuItem ConnectToDB;
    private javax.swing.JInternalFrame Connected;
    private javax.swing.JMenuItem Dialog_box;
    public static javax.swing.JLabel DiffTempValue;
    private javax.swing.JMenuItem Disconnect;
    public static javax.swing.JInternalFrame ECGContainer;
    private javax.swing.JLabel ECGLabel;
    private javax.swing.JTabbedPane ECGPane;
    private javax.swing.JButton ECGSQLChart;
    private javax.swing.JButton ECGSerialChart;
    public static javax.swing.JLabel ECGValue;
    private javax.swing.JMenuItem EXITGEN;
    private javax.swing.JMenuItem EXITINBOUND;
    private javax.swing.JMenuItem EXITTEMP;
    private javax.swing.JButton GPS;
    private javax.swing.JInternalFrame GenDAta;
    private javax.swing.JLabel GoodPackets;
    public static javax.swing.JLabel IRLED;
    private javax.swing.JButton IRSQLChart;
    private javax.swing.JButton IRSerialChart;
    private javax.swing.JInternalFrame Inbound;
    private javax.swing.JButton LightSQLChart2;
    private javax.swing.JLabel LightSensorLabel;
    private javax.swing.JButton LightSerialChart2;
    public static javax.swing.JLabel LightValue;
    private javax.swing.JFrame Main;
    private javax.swing.JButton OXISQLChart1;
    private javax.swing.JButton OXISerialChart1;
    private javax.swing.JLabel PulseLabel;
    public static javax.swing.JLabel PulseValue;
    public static javax.swing.JLabel REDLED;
    public static javax.swing.JLabel RESP;
    private javax.swing.JLabel RESPLabel;
    private javax.swing.JButton RESPSerial;
    private javax.swing.JButton RESPSql;
    public static javax.swing.JLabel RESPValue;
    private javax.swing.JButton ResetPulse;
    private javax.swing.JButton ResetSPO2;
    private javax.swing.JLabel SPO2Label;
    public static javax.swing.JLabel SPO2Value;
    private javax.swing.JLabel Serial;
    private javax.swing.JMenuItem ShowALL;
    private javax.swing.JMenuItem ShowConnected;
    private javax.swing.JMenuItem ShowECG;
    private javax.swing.JMenuItem ShowGen;
    private javax.swing.JMenuItem ShowInbound;
    private javax.swing.JMenuItem ShowSignal;
    private javax.swing.JMenuItem ShowTemp;
    public static javax.swing.JInternalFrame SignalAnalysis;
    public static javax.swing.JPanel SignalStrength;
    private javax.swing.JLabel Socket;
    private javax.swing.JButton StartPulse;
    private javax.swing.JButton StartSPO2;
    private javax.swing.JButton StopPulse;
    private javax.swing.JButton StopSPO2;
    private javax.swing.JLabel TEXT;
    private javax.swing.JButton TempSQLChart;
    private javax.swing.JButton TempSerialChart;
    private javax.swing.JInternalFrame Temperature;
    public static javax.swing.JLabel TympTempValue;
    private javax.swing.JLabel Tymplabel;
    public static javax.swing.JLabel XbeePackets;
    public static javax.swing.JLabel XbeeTotal;
    public static javax.swing.JLabel Xbeegood;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    public static javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    public static javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenu jMenu6;
    private javax.swing.JMenu jMenu9;
    private javax.swing.JMenuBar jMenuBar2;
    private javax.swing.JMenuBar jMenuBar3;
    private javax.swing.JMenuBar jMenuBar4;
    private javax.swing.JMenuBar jMenuBar5;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem10;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    public static javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane5;
    private javax.swing.JTabbedPane jTabbedPane6;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable3;
    public static javax.swing.JLabel label10;
    public static javax.swing.JLabel label20;
    public static javax.swing.JLabel label30;
    public static javax.swing.JLabel label40;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JMenuBar menuBar;
    // End of variables declaration//GEN-END:variables

}
