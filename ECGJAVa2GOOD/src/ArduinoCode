
//defines/includes
#include "max6675.h"
#include <serialGLCDlib.h>

/*________________________________________________________________________________*/

#define LightPin 1
#define ECGPin 4
#define ECG_LED 5
#define PWR_PIN 6
#define Red 2
#define redLED 3
#define irLED 4
#define Battpin 5
#define Resppin 2
#define TempAround 2

/*________________________________________________________________________________*/

//initalization of vars
serialGLCD lcd;
int z = 0;
double temp = 0;
double tempInt = 0;
double tempError = 0;
double tempRed = 0;
double tempECG = 0;
double tempRESP = 0;
double tempLight = 0;
double AmbientTemp = 0;
double tempBat = 0;
boolean Rolling = true;
boolean Record = false;
String VitalData = "\nTime, ECG, Red LED, IR LED, Error, RESP \n";
String TempData = "Time, Temperature, Ambient Temp \n";
String OtherData = "Time, Battery \n";
  
float vcc = 4.91;                       // only used for display purposes, if used
                                        // set to the measured Vcc.
float pad = 9850;                       // balance/pad resistor value, set this to
                                        // the measured resistance of your pad resistor
float thermr = 10000;                   // thermistor nominal resistance
int thermoDO = 10;
int thermoCS = 11;
int thermoCLK = 12;

 /*________________________________________________________________________________*/

MAX6675 thermocouple(thermoCLK, thermoCS, thermoDO);
int vccPin = 9;
int gndPin = 8;
  
 /*________________________________________________________________________________*/
  
void setup() {
  Serial.begin(115200);
  Serial1.begin(115200);
  // use Arduino pins 
  pinMode(vccPin, OUTPUT); digitalWrite(vccPin, HIGH);
  pinMode(gndPin, OUTPUT); digitalWrite(gndPin, LOW);
  pinMode(PWR_PIN, OUTPUT); digitalWrite(PWR_PIN, HIGH);
  pinMode(ECG_LED, OUTPUT); digitalWrite(ECG_LED, LOW);
  pinMode(ECGPin, INPUT); digitalWrite(ECGPin, LOW);
  pinMode(irLED, OUTPUT); digitalWrite(irLED, LOW);
  pinMode(redLED, OUTPUT); digitalWrite(redLED, LOW);
  pinMode(TempAround, OUTPUT); digitalWrite(TempAround, LOW);
  pinMode(LightPin, INPUT);
  pinMode(Red, INPUT);
  
  Serial1.print("Frank & Thai MED R&D.");
  Serial1.print("Starting up..........");
  Serial1.print("                     ");
  Serial1.print("                     ");
  Serial1.print("                     ");
  Serial1.print("                     ");
  Serial1.print("                     ");
  Serial1.print("                     ");
  
  delay(10000);
}

 /*________________________________________________________________________________*/

void loop() {
  // basic readout test, just print the current temp
  Serial.print("!");
  Serial.print("Lig:");
  Serial.print((double)analogRead(LightPin));
  if (z==1000){
    Serial.print("Tem:");
    temp = thermocouple.readCelsius()-6.0;
    Serial.print((double)(thermocouple.readCelsius()-6.0));
    z=0;
  }
  else{
    Serial.print("Tem:");
    Serial.print(temp);
  }
  Serial.print("ECG:");
  tempECG = (double)analogRead(ECGPin);
  Serial.print(tempECG);
  Serial.print("POT:");
  digitalWrite(redLED, HIGH);
  tempRed = pulseIn(Red, HIGH, 10); 
  Serial.print(tempRed);
  digitalWrite(redLED, LOW);
  Serial.print("BAT:");
  tempBat = (double)analogRead(Battpin);
  Serial.print(tempBat);
  Serial.print("IRL:");
  digitalWrite(irLED, HIGH);
  tempInt = (double)pulseIn(Red, HIGH, 10);
  Serial.print(tempInt);
  digitalWrite(irLED, LOW);
  Serial.print("LOW:");
  tempError = (double)pulseIn(Red, HIGH, 10);
  Serial.print(tempInt);
  Serial.print("RES:");
  tempRESP = (double)analogRead(Resppin);
  Serial.print(tempRESP);
  Serial.print("ArT:");
  AmbientTemp = (double)Thermistor(analogRead(TempAround)); 
  Serial.print(AmbientTemp);
  Serial.println("\n");
  z+=10;
  
  PrintToLCD();

  delay(10);
}

 /*________________________________________________________________________________*/

void select(){
  
  // Select the inputs...
} 
void PrintToLCD(){
  if(Rolling){ 
    Serial1.print("Writing to Log Files.");
    Serial1.print("Pushing Electrons....");
    Serial1.print("Sending to XBee......");
    Serial1.print("                     ");
    Serial1.print("                     ");
    Serial1.print("                     ");
    Serial1.print("                     ");
    Serial1.print("                     ");
    Rolling = false;
  }
  else{
    Serial1.print("Sending -> ..........");
    Serial1.print("                     ");
    Serial1.print("                     ");
    Serial1.print("                     ");
    Serial1.print("                     ");
    Serial1.print("                     ");
    Serial1.print("                     ");
    Serial1.print("                     ");      
  }
}

/*________________________________________________________________________________*/

float Thermistor(int RawADC) {
  long Resistance;  
  float Temp;  // Dual-Purpose variable to save space.

  Resistance=((1024 * pad / RawADC) - pad); 
  Temp = log(Resistance); // Saving the Log(resistance) so not to calculate  it 4 times later
  Temp = 1 / (0.001129148 + (0.000234125 * Temp) + (0.0000000876741 * Temp * Temp * Temp));
  Temp = Temp - 273.15;  // Convert Kelvin to Celsius                      
  return Temp;                                      // Return the Temperature
}
/*________________________________________________________________________________*/